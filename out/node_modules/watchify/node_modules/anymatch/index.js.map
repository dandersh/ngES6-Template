{"version":3,"sources":["../../../../../node_modules/watchify/node_modules/anymatch/index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,WAAW,SAAX,QAAW,CAAS,QAAT,EAAmB,KAAnB,EAA0B,WAA1B,EAAuC,UAAvC,EAAmD,QAAnD,EAA6D;AAC1E,aAAW,OAAO,QAAP,CAAX;AACA,UAAQ,OAAO,KAAP,CAAR;AACA,MAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,SAAS,IAAT,CAAc,IAAd,EAAoB,SAAS,GAAT,CAAa,UAAS,SAAT,EAAoB;AAC1D,aAAO,OAAO,SAAP,KAAqB,QAArB,IAAiC,UAAU,CAAV,MAAiB,GAAlD,GACL,WAAW,OAAX,CAAmB,SAAnB,CADK,GAC2B,SADlC;AAED,KAH0B,CAApB,CAAP;AAID;AACD,eAAa,cAAc,CAA3B;AACA,MAAI,SAAS,MAAM,CAAN,CAAb;AACA,MAAI,SAAJ;AACA,MAAI,UAAU,KAAd;AACA,MAAI,aAAa,CAAC,CAAlB;AACA,WAAS,YAAT,CAAuB,SAAvB,EAAkC,KAAlC,EAAyC;AACvC,QAAI,MAAJ;AACA,YAAQ,SAAS,IAAT,CAAc,SAAd,CAAR;AACA,WAAK,iBAAL;AACE,iBAAS,WAAW,SAAX,IAAwB,aAAa,cAAc,SAA5D;AACA,iBAAS,UAAU,WAAW,OAAX,CAAmB,MAAnB,EAA2B,SAA3B,CAAnB;AACA;AACF,WAAK,iBAAL;AACE,iBAAS,UAAU,IAAV,CAAe,MAAf,KAA0B,aAAa,UAAU,IAAV,CAAe,SAAf,CAAhD;AACA;AACF,WAAK,mBAAL;AACE,iBAAS,UAAU,KAAV,CAAgB,IAAhB,EAAsB,KAAtB,CAAT;AACA;AACF;AACE,iBAAS,KAAT;AAZF;AAcA,QAAI,MAAJ,EAAY;AACV,mBAAa,QAAQ,UAArB;AACD;AACD,WAAO,MAAP;AACD;AACD,MAAI,OAAO,QAAX;AACA,MAAI,WAAW,KAAK,MAAL,CAAY,UAAS,GAAT,EAAc,SAAd,EAAyB,KAAzB,EAAgC;AACzD,QAAI,OAAO,SAAP,KAAqB,QAArB,IAAiC,UAAU,CAAV,MAAiB,GAAtD,EAA2D;AACzD,UAAI,SAAS,QAAb,EAAuB;AACrB;AACA,eAAO,KAAK,KAAL,EAAP;AACD;AACD,WAAK,KAAL,IAAc,IAAd;AACA,UAAI,IAAJ,CAAS,UAAU,MAAV,CAAiB,CAAjB,CAAT;AACD;AACD,WAAO,GAAP;AACD,GAVc,EAUZ,EAVY,CAAf;AAWA,MAAI,CAAC,SAAS,MAAV,IAAoB,CAAC,WAAW,GAAX,CAAe,MAAf,EAAuB,QAAvB,CAAzB,EAA2D;AACzD,QAAI,KAAK,GAAL,KAAa,IAAb,IAAqB,OAAO,MAAP,KAAkB,QAA3C,EAAqD;AACnD,kBAAY,OAAO,KAAP,CAAa,IAAb,EAAmB,IAAnB,CAAwB,GAAxB,CAAZ;AACA,kBAAY,cAAc,MAAd,GAAuB,IAAvB,GAA8B,SAA1C;AACD;AACD,cAAU,KAAK,KAAL,CAAW,UAAX,EAAuB,QAAvB,EAAiC,IAAjC,CAAsC,YAAtC,CAAV;AACD;AACD,SAAO,gBAAgB,IAAhB,GAAuB,UAAvB,GAAoC,OAA3C;AACD,CAvDD;;AAyDA,OAAO,OAAP,GAAiB,QAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar arrify = require('arrify');\nvar micromatch = require('micromatch');\nvar path = require('path');\n\nvar anymatch = function(criteria, value, returnIndex, startIndex, endIndex) {\n  criteria = arrify(criteria);\n  value = arrify(value);\n  if (arguments.length === 1) {\n    return anymatch.bind(null, criteria.map(function(criterion) {\n      return typeof criterion === 'string' && criterion[0] !== '!' ?\n        micromatch.matcher(criterion) : criterion;\n    }));\n  }\n  startIndex = startIndex || 0;\n  var string = value[0];\n  var altString;\n  var matched = false;\n  var matchIndex = -1;\n  function testCriteria (criterion, index) {\n    var result;\n    switch (toString.call(criterion)) {\n    case '[object String]':\n      result = string === criterion || altString && altString === criterion;\n      result = result || micromatch.isMatch(string, criterion);\n      break;\n    case '[object RegExp]':\n      result = criterion.test(string) || altString && criterion.test(altString);\n      break;\n    case '[object Function]':\n      result = criterion.apply(null, value);\n      break;\n    default:\n      result = false;\n    }\n    if (result) {\n      matchIndex = index + startIndex;\n    }\n    return result;\n  }\n  var crit = criteria;\n  var negGlobs = crit.reduce(function(arr, criterion, index) {\n    if (typeof criterion === 'string' && criterion[0] === '!') {\n      if (crit === criteria) {\n        // make a copy before modifying\n        crit = crit.slice();\n      }\n      crit[index] = null;\n      arr.push(criterion.substr(1));\n    }\n    return arr;\n  }, []);\n  if (!negGlobs.length || !micromatch.any(string, negGlobs)) {\n    if (path.sep === '\\\\' && typeof string === 'string') {\n      altString = string.split('\\\\').join('/');\n      altString = altString === string ? null : altString;\n    }\n    matched = crit.slice(startIndex, endIndex).some(testCriteria);\n  }\n  return returnIndex === true ? matchIndex : matched;\n};\n\nmodule.exports = anymatch;\n"]}