{"version":3,"sources":["../../../../../../../../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/node_modules/braces/node_modules/expand-range/node_modules/fill-range/node_modules/repeat-string/index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA;;;;AAIA,IAAI,MAAM,EAAV;AACA,IAAI,KAAJ;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,MAAjB;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACxB,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAI,SAAJ,CAAc,iCAAd,CAAN;AACD;;AAED;AACA,MAAI,QAAQ,CAAZ,EAAe,OAAO,GAAP;AACf,MAAI,QAAQ,CAAZ,EAAe,OAAO,MAAM,GAAb;;AAEf,MAAI,MAAM,IAAI,MAAJ,GAAa,GAAvB;AACA,MAAI,UAAU,GAAV,IAAiB,OAAO,KAAP,KAAiB,WAAtC,EAAmD;AACjD,YAAQ,GAAR;AACA,UAAM,EAAN;AACD;;AAED,SAAO,MAAM,IAAI,MAAV,IAAoB,MAAM,CAAjC,EAAoC;AAClC,QAAI,MAAM,CAAV,EAAa;AACX,aAAO,GAAP;AACD;;AAED,YAAQ,CAAR;AACA,QAAI,CAAC,GAAL,EAAU;AACV,WAAO,GAAP;AACD;;AAED,SAAO,IAAI,MAAJ,CAAW,CAAX,EAAc,GAAd,CAAP;AACD","file":"index.js","sourcesContent":["/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('repeat-string expects a string.');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  }\n\n  while (max > res.length && num > 0) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    if (!num) break;\n    str += str;\n  }\n\n  return res.substr(0, max);\n}\n\n"]}