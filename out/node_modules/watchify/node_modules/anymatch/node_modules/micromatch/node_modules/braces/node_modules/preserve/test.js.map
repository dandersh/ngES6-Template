{"version":3,"sources":["../../../../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/node_modules/braces/node_modules/preserve/test.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,SAAS,QAAQ,IAAR,CAAb;;AAEA,IAAI,KAAK,gBAAT;AACA,IAAI,SAAS,SAAT,MAAS,CAAS,GAAT,EAAc;AACzB,SAAO,QAAQ,aAAR,EAAuB,IAAvB,CAA4B,GAA5B,EAAiC;AACtC,iBAAa,GADyB;AAEtC,iBAAa;AAFyB,GAAjC,CAAP;AAID,CALD;;AAOA,SAAS,iBAAT,EAA4B,YAAY;AACtC,MAAI,SAAS,oCAAb;AACA,MAAI,KAAK,gBAAT;;AAEA,KAAG,sEAAH,EAA2E,YAAY;AACrF,QAAI,OAAO,OAAO,+BAAP,CAAX;AACA,SAAK,MAAL,CAAY,KAAZ,CAAkB,+CAAlB;AACD,GAHD;;AAKA,KAAG,4CAAH,EAAiD,YAAY;AAC3D,QAAI,OAAO,OAAO,KAAP,CAAa,OAAO,OAAO,MAAP,CAAc,+BAAd,EAA+C,EAA/C,CAAP,CAAb,CAAX;AACA,SAAK,MAAL,CAAY,KAAZ,CAAkB,qCAAlB;AACD,GAHD;;AAKA,WAAS,WAAT,EAAsB,YAAY;AAChC,OAAG,iDAAH,EAAsD,YAAY;AAChE,aAAO,MAAP,CAAc,8BAAd,EAA8C,EAA9C,EAAkD,MAAlD,CAAyD,KAAzD,CAA+D,MAA/D;AACD,KAFD;AAGD,GAJD;;AAMA,WAAS,gBAAT,EAA2B,YAAY;AACrC,OAAG,yDAAH,EAA8D,YAAY;AACxE,UAAI,SAAS,OAAO,MAAP,CAAc,8BAAd,EAA8C,EAA9C,CAAb;AACA,aAAO,MAAP,CAAc,KAAd,CAAoB,MAApB;AACA,aAAO,KAAP,CAAa,MAAb,EAAqB,MAArB,CAA4B,KAA5B,CAAkC,8BAAlC;AACD,KAJD;AAKD,GAND;AAOD,CA3BD","file":"test.js","sourcesContent":["/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License\n */\n\n'use strict';\n\nvar should = require('should');\nvar tokens = require('./');\n\nvar re = /<%=\\s*[^>]+%>/g;\nvar pretty = function(str) {\n  return require('js-beautify').html(str, {\n    indent_char: ' ',\n    indent_size: 2,\n  });\n};\n\ndescribe('preserve tokens', function () {\n  var testRe = /__ID.{5}__\\n__ID.{5}__\\n__ID.{5}__/;\n  var re = /<%=\\s*[^>]+%>/g;\n\n  it('should (e.g. shouldn\\'t, but will) mangle tokens in the given string', function () {\n    var html = pretty('<ul><li><%= name %></li></ul>');\n    html.should.equal('<ul>\\n  <li>\\n    <%=n ame %>\\n  </li>\\n</ul>');\n  });\n\n  it('should preserve tokens in the given string', function () {\n    var html = tokens.after(pretty(tokens.before('<ul><li><%= name %></li></ul>', re)));\n    html.should.equal('<ul>\\n  <li><%= name %></li>\\n</ul>');\n  });\n\n  describe('.before()', function () {\n    it('should replace matches with placeholder tokens:', function () {\n      tokens.before('<%= a %>\\n<%= b %>\\n<%= c %>', re).should.match(testRe);\n    });\n  });\n\n  describe('tokens.after()', function () {\n    it('should replace placeholder tokens with original values:', function () {\n      var before = tokens.before('<%= a %>\\n<%= b %>\\n<%= c %>', re);\n      before.should.match(testRe);\n      tokens.after(before).should.equal('<%= a %>\\n<%= b %>\\n<%= c %>');\n    });\n  });\n});\n"]}