{"version":3,"sources":["../../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/node_modules/kind-of/index.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,QAAQ,WAAR,CAAf;AACA,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;;AAEA;;;;;;;AAOA,OAAO,OAAP,GAAiB,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACpC;AACA,MAAI,OAAO,GAAP,KAAe,WAAnB,EAAgC;AAC9B,WAAO,WAAP;AACD;AACD,MAAI,QAAQ,IAAZ,EAAkB;AAChB,WAAO,MAAP;AACD;AACD,MAAI,QAAQ,IAAR,IAAgB,QAAQ,KAAxB,IAAiC,eAAe,OAApD,EAA6D;AAC3D,WAAO,SAAP;AACD;AACD,MAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,eAAe,MAA9C,EAAsD;AACpD,WAAO,QAAP;AACD;AACD,MAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,eAAe,MAA9C,EAAsD;AACpD,WAAO,QAAP;AACD;;AAED;AACA,MAAI,OAAO,GAAP,KAAe,UAAf,IAA6B,eAAe,QAAhD,EAA0D;AACxD,WAAO,UAAP;AACD;;AAED;AACA,MAAI,OAAO,MAAM,OAAb,KAAyB,WAAzB,IAAwC,MAAM,OAAN,CAAc,GAAd,CAA5C,EAAgE;AAC9D,WAAO,OAAP;AACD;;AAED;AACA,MAAI,eAAe,MAAnB,EAA2B;AACzB,WAAO,QAAP;AACD;AACD,MAAI,eAAe,IAAnB,EAAyB;AACvB,WAAO,MAAP;AACD;;AAED;AACA,MAAI,OAAO,SAAS,IAAT,CAAc,GAAd,CAAX;;AAEA,MAAI,SAAS,iBAAb,EAAgC;AAC9B,WAAO,QAAP;AACD;AACD,MAAI,SAAS,eAAb,EAA8B;AAC5B,WAAO,MAAP;AACD;AACD,MAAI,SAAS,oBAAb,EAAmC;AACjC,WAAO,WAAP;AACD;;AAED;AACA,MAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,SAAS,GAAT,CAArC,EAAoD;AAClD,WAAO,QAAP;AACD;;AAED;AACA,MAAI,SAAS,cAAb,EAA6B;AAC3B,WAAO,KAAP;AACD;AACD,MAAI,SAAS,kBAAb,EAAiC;AAC/B,WAAO,SAAP;AACD;AACD,MAAI,SAAS,cAAb,EAA6B;AAC3B,WAAO,KAAP;AACD;AACD,MAAI,SAAS,kBAAb,EAAiC;AAC/B,WAAO,SAAP;AACD;AACD,MAAI,SAAS,iBAAb,EAAgC;AAC9B,WAAO,QAAP;AACD;;AAED;AACA,MAAI,SAAS,oBAAb,EAAmC;AACjC,WAAO,WAAP;AACD;AACD,MAAI,SAAS,qBAAb,EAAoC;AAClC,WAAO,YAAP;AACD;AACD,MAAI,SAAS,4BAAb,EAA2C;AACzC,WAAO,mBAAP;AACD;AACD,MAAI,SAAS,qBAAb,EAAoC;AAClC,WAAO,YAAP;AACD;AACD,MAAI,SAAS,sBAAb,EAAqC;AACnC,WAAO,aAAP;AACD;AACD,MAAI,SAAS,qBAAb,EAAoC;AAClC,WAAO,YAAP;AACD;AACD,MAAI,SAAS,sBAAb,EAAqC;AACnC,WAAO,aAAP;AACD;AACD,MAAI,SAAS,uBAAb,EAAsC;AACpC,WAAO,cAAP;AACD;AACD,MAAI,SAAS,uBAAb,EAAsC;AACpC,WAAO,cAAP;AACD;;AAED;AACA,SAAO,QAAP;AACD,CAtGD","file":"index.js","sourcesContent":["var isBuffer = require('is-buffer');\nvar toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  // primitivies\n  if (typeof val === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (typeof val === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (typeof val === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (typeof val === 'function' || val instanceof Function) {\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  var type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n\n  // buffer\n  if (typeof Buffer !== 'undefined' && isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n\n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n"]}