{"version":3,"sources":["../../../../../../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/node_modules/braces/node_modules/expand-range/node_modules/fill-range/index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,WAAW,QAAQ,WAAR,CAAf;AACA,IAAI,YAAY,QAAQ,YAAR,CAAhB;AACA,IAAI,YAAY,QAAQ,eAAR,CAAhB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;;;;;;;;;AAUA,SAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,OAA/B,EAAwC,EAAxC,EAA4C;AAC1C,MAAI,KAAK,IAAL,IAAa,KAAK,IAAtB,EAA4B;AAC1B,UAAM,IAAI,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAED,MAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC9B,SAAK,IAAL,CAAW,UAAU,EAAV,CAAc,OAAO,IAAP;AAC1B;;AAED,MAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AACjC,SAAK,OAAL,CAAc,UAAU,EAAV;AACf;;AAED,MAAI,SAAS,IAAT,CAAJ,EAAoB;AAClB,cAAU,IAAV,CAAgB,OAAO,EAAP;AACjB;;AAED,MAAI,MAAJ;AAAA,MAAY,QAAQ,KAApB;AAAA,MAA2B,MAAM,EAAjC;AACA,MAAI,OAAO,WAAW,EAAtB;;AAEA,MAAI,OAAO,KAAK,MAAZ,KAAuB,WAA3B,EAAwC;AACtC,SAAK,MAAL,GAAc,IAAd;AACD;;AAED,SAAO,QAAQ,KAAK,IAApB;;AAEA;AACA,MAAI,QAAQ,CAAZ;AAAA,MAAe,QAAQ,CAAvB;;AAEA,MAAK,EAAE,QAAF,OAAiB,IAAlB,GAA0B,CAA1B,GAA8B,CAAlC;;AAEA,MAAI,KAAK,QAAL,IAAiB,KAAK,MAA1B,EAAkC;AAChC,WAAO,OAAQ,QAAQ,GAAhB,GAAuB,IAA9B;AACA,aAAS,IAAT;AACA,YAAQ,IAAR;AACA,UAAM,GAAN;AACD;;AAED;AACA,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAI,QAAQ,SAAS,IAAT,CAAc,IAAd,CAAZ;;AAEA,QAAI,KAAJ,EAAW;AACT,UAAI,IAAI,MAAM,KAAd;AACA,UAAI,IAAI,MAAM,CAAN,CAAR;;AAEA;AACA,UAAI,MAAM,GAAV,EAAe;AACb,eAAO,OAAO,CAAP,EAAU,CAAV,CAAP;;AAEF;AACC,OAJD,MAIO,IAAI,MAAM,GAAV,EAAe;AACpB,eAAO,CAAC,UAAU,CAAV,EAAa,CAAb,CAAD,CAAP;;AAEF;AACC,OAJM,MAIA,IAAI,MAAM,GAAV,EAAe;AACpB,eAAO,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,IAAoB,KAAK,MAAL,CAAY,IAAI,CAAhB,CAA3B;AACA,iBAAS,IAAT;;AAEF;AACA;AACC,OANM,MAMA,IAAI,MAAM,GAAV,EAAe;AACpB,eAAO,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,IAAoB,KAAK,MAAL,CAAY,IAAI,CAAhB,CAA3B;AACA,iBAAS,IAAT;AACA,gBAAQ,IAAR;AACA,cAAM,CAAN;;AAEF;AACA;AACC,OARM,MAQA,IAAI,MAAM,GAAV,EAAe;AACpB,eAAO,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,IAAoB,KAAK,MAAL,CAAY,IAAI,CAAhB,CAA3B;AACA,iBAAS,IAAT;AACA,gBAAQ,IAAR;AACA,cAAM,CAAN;AACD;AACF,KAjCD,MAiCO,IAAI,CAAC,SAAS,IAAT,CAAL,EAAqB;AAC1B,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,cAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;AACD;AACD,aAAO,IAAP;AACD;AACF;;AAED,MAAI,mBAAmB,IAAnB,CAAwB,CAAxB,KAA8B,mBAAmB,IAAnB,CAAwB,CAAxB,CAAlC,EAA8D;AAC5D,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,YAAM,IAAI,UAAJ,CAAe,sCAAf,CAAN;AACD;AACD,WAAO,IAAP;AACD;;AAED;AACA;AACA,MAAI,CAAC,WAAW,CAAX,CAAD,IAAkB,CAAC,WAAW,CAAX,CAAnB,IAAoC,QAAQ,CAAR,CAApC,IAAkD,QAAQ,CAAR,CAAtD,EAAkE;AAChE,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,YAAM,IAAI,UAAJ,CAAe,sCAAf,CAAN;AACD;AACD,WAAO,IAAP;AACD;;AAED;AACA,MAAI,SAAS,SAAS,MAAM,CAAN,CAAT,CAAb;AACA,MAAI,SAAS,SAAS,MAAM,CAAN,CAAT,CAAb;;AAEA,MAAK,CAAC,MAAD,IAAW,MAAZ,IAAwB,UAAU,CAAC,MAAvC,EAAgD;AAC9C,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,YAAM,IAAI,SAAJ,CAAc,+DAAd,CAAN;AACD;AACD,WAAO,IAAP;AACD;;AAED;AACA;AACA,MAAI,QAAQ,MAAZ;AACA,MAAI,MAAM,WAAW,IAAX,CAAV;;AAEA;AACA,MAAI,KAAJ,EAAW;AACT;AACA,QAAI,CAAC,CAAL,CAAQ,IAAI,CAAC,CAAL;AACT,GAHD,MAGO;AACL;AACA,QAAI,EAAE,UAAF,CAAa,CAAb,CAAJ;AACA,QAAI,EAAE,UAAF,CAAa,CAAb,CAAJ;AACD;;AAED;AACA,MAAI,eAAe,IAAI,CAAvB;;AAEA;AACA,MAAI,IAAI,CAAJ,IAAS,IAAI,CAAjB,EAAoB;AAClB,aAAS,KAAT;AACA,YAAQ,KAAR;AACD;;AAED;AACA,MAAI,UAAU,SAAS,KAAT,EAAgB,KAAhB,CAAd;AACA,MAAI,GAAJ;AAAA,MAAS,GAAT;AAAA,MAAc,MAAM,EAApB;AACA,MAAI,KAAK,CAAT;;AAEA;AACA,MAAI,KAAJ,EAAW;AACT,QAAI,aAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,KAAxB,EAA+B,OAA/B,EAAwC,IAAxC,CAAJ,EAAmD;AACjD;AACA,UAAI,QAAQ,GAAR,IAAe,QAAQ,GAA3B,EAAgC;AAC9B,cAAM,gBAAgB,CAAhB,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,KAA3B,EAAkC,YAAlC,CAAN;AACD;AACD,aAAO,KAAK,CAAC,KAAD,EAAQ,KAAR,CAAL,EAAqB,GAArB,EAA0B,IAA1B,CAAP;AACD;AACF;;AAED,SAAO,eAAgB,KAAK,CAArB,GAA2B,KAAK,CAAvC,EAA2C;AACzC,QAAI,WAAW,KAAf,EAAsB;AACpB,YAAM,QAAQ,CAAR,CAAN;AACD;;AAED;AACA,QAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAM,GAAG,CAAH,EAAM,KAAN,EAAa,GAAb,EAAkB,IAAlB,CAAN;;AAEF;AACC,KAJD,MAIO,IAAI,CAAC,KAAL,EAAY;AACjB,UAAI,SAAS,cAAc,CAAd,CAAb,EAA+B;AAC7B,cAAM,IAAN;AACD,OAFD,MAEO;AACL,cAAM,OAAO,YAAP,CAAoB,CAApB,CAAN;AACD;;AAEH;AACC,KARM,MAQA;AACL,YAAM,cAAc,CAAd,EAAiB,GAAjB,CAAN;AACD;;AAED;AACA,QAAI,QAAQ,IAAZ,EAAkB,IAAI,IAAJ,CAAS,GAAT;;AAElB;AACA,QAAI,YAAJ,EAAkB;AAChB,WAAK,GAAL;AACD,KAFD,MAEO;AACL,WAAK,GAAL;AACD;AACF;;AAED;AACA;AACA;AACA,MAAI,CAAC,SAAS,MAAV,KAAqB,CAAC,KAAK,QAA/B,EAAyC;AACvC;AACA,QAAI,QAAQ,GAAR,IAAe,QAAQ,GAA3B,EAAgC;AAC9B,YAAM,gBAAgB,CAAhB,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,KAA3B,EAAkC,YAAlC,CAAN;AACD;AACD,QAAI,IAAI,MAAJ,KAAe,CAAf,IAAoB,IAAI,CAAxB,IAA6B,IAAI,CAArC,EAAwC;AAAE,aAAO,GAAP;AAAa;AACvD,WAAO,KAAK,GAAL,EAAU,GAAV,EAAe,IAAf,CAAP;AACD;;AAED,SAAO,GAAP;AACD;;AAED;;;;;AAKA,SAAS,IAAT,CAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AAC5B,MAAI,QAAQ,GAAZ,EAAiB;AAAE,UAAM,GAAN;AAAY;AAC/B,MAAI,MAAM,IAAI,IAAJ,CAAS,GAAT,CAAV;AACA,MAAI,MAAM,QAAQ,KAAK,WAAvB;;AAEA;AACA,MAAI,QAAQ,GAAZ,EAAiB;AACf,UAAM,MAAM,MAAM,GAAZ,GAAkB,GAAxB;AACA,UAAM,MAAM,GAAN,GAAY,GAAlB;AACD;;AAED;AACA,MAAI,QAAQ,GAAZ,EAAiB;AACf,UAAO,OAAO,QAAQ,GAAhB,GACF,MAAM,GADJ,GAEF,GAFJ;AAGA,UAAM,MAAM,GAAN,GAAY,GAAlB;AACD;AACD,SAAO,CAAC,GAAD,CAAP;AACD;;AAED;;;;AAIA,SAAS,WAAT,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,KAAjC,EAAwC,YAAxC,EAAsD;AACpD,MAAI,YAAJ,EAAkB;AAAE,WAAO,KAAP;AAAe;AACnC,MAAI,KAAJ,EAAW;AAAE,WAAO,KAAK,CAAL,IAAU,KAAK,CAAtB;AAA0B;AACvC,MAAI,IAAI,CAAR,EAAW;AAAE,WAAO,SAAS,CAAhB;AAAoB;AACjC,SAAO,KAAP;AACD;;AAED;;;;AAIA,SAAS,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,GAA5B,EAAiC,KAAjC,EAAwC,OAAxC,EAAiD,IAAjD,EAAuD;AACrD,MAAI,UAAU,IAAI,CAAJ,IAAS,IAAI,CAAvB,CAAJ,EAA+B;AAAE,WAAO,KAAP;AAAe;AAChD,SAAO,CAAC,OAAD,IAAY,QAAQ,CAApB,IAAyB,IAAI,CAApC;AACD;;AAED;;;;AAIA,SAAS,eAAT,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,YAA5C,EAA0D;AACxD,MAAI,SAAS,YAAY,CAAZ,EAAe,CAAf,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B,YAA/B,CAAb;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,GAAP;AACD;AACD,SAAO,GAAP;AACD;;AAED;;;;AAIA,SAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,SAAO,KAAK,GAAL,CAAS,QAAQ,CAAjB,KAAuB,CAA9B;AACD;;AAED;;;;AAIA,SAAS,aAAT,CAAuB,EAAvB,EAA2B,GAA3B,EAAgC;AAC9B,MAAI,MAAM,MAAM,MAAM,EAAZ,GAAiB,EAA3B;AACA,MAAI,OAAO,GAAG,QAAH,GAAc,MAAd,CAAqB,CAArB,MAA4B,GAAvC,EAA4C;AAC1C,UAAM,MAAM,GAAN,GAAY,GAAG,QAAH,GAAc,MAAd,CAAqB,CAArB,CAAlB;AACD;AACD,SAAO,IAAI,QAAJ,EAAP;AACD;;AAED;;;;AAIA,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B,MAAI,KAAK,MAAM,GAAN,CAAT;AACA,SAAO,OAAO,IAAP,IACF,OAAO,GADL,IAEF,OAAO,GAFL,IAGF,OAAO,GAHL,IAIF,OAAO,GAJL,IAKF,OAAO,GALL,IAMF,OAAO,GANZ;AAOD;;AAED;;;;AAIA,SAAS,KAAT,CAAe,EAAf,EAAmB;AACjB,SAAO,OAAO,YAAP,CAAoB,EAApB,CAAP;AACD;;AAGD;;;;AAIA,SAAS,MAAT,GAAkB;AAChB,SAAO;AAAP;AACD;;AAED;;;;;AAKA,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,SAAO,aAAY,IAAZ,CAAiB,GAAjB;AAAP;AACD;;AAED;;;;;AAKA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB,SAAO,0BAAyB,IAAzB,CAA8B,GAA9B;AAAP;AACD;;AAED;;;;AAIA,SAAS,KAAT,CAAe,GAAf,EAAoB;AAClB,MAAI,SAAS,IAAT,CAAc,IAAI,QAAJ,EAAd,CAAJ,EAAmC;AACjC,WAAO,GAAP;AACD;AACD,SAAO,GAAP;AACD;;AAED;;;;;AAKA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,SAAO,qBAAoB,IAApB,CAAyB,GAAzB;AAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,QAAT,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC;AAC9B,MAAI,SAAS,KAAT,KAAmB,SAAS,KAAT,CAAvB,EAAwC;AACtC,QAAI,OAAO,OAAO,KAAP,CAAX;AACA,QAAI,OAAO,OAAO,KAAP,CAAX;;AAEA,QAAI,MAAM,QAAQ,IAAR,GACN,IADM,GAEN,IAFJ;;AAIA,WAAO,UAAU,CAAV,EAAa;AAClB,aAAO,UAAU,GAAV,EAAe,MAAM,OAAO,CAAP,CAArB,CAAP;AACD,KAFD;AAGD;AACD,SAAO,KAAP;AACD;;AAED;;;;AAIA,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACnB,SAAO,IAAI,QAAJ,GAAe,MAAtB;AACD","file":"index.js","sourcesContent":["/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar isNumber = require('is-number');\nvar randomize = require('randomatic');\nvar repeatStr = require('repeat-string');\nvar repeat = require('repeat-element');\n\n/**\n * Expose `fillRange`\n */\n\nmodule.exports = fillRange;\n\n/**\n * Return a range of numbers or letters.\n *\n * @param  {String} `a` Start of the range\n * @param  {String} `b` End of the range\n * @param  {String} `step` Increment or decrement to use.\n * @param  {Function} `fn` Custom function to modify each element in the range.\n * @return {Array}\n */\n\nfunction fillRange(a, b, step, options, fn) {\n  if (a == null || b == null) {\n    throw new Error('fill-range expects the first and second args to be strings.');\n  }\n\n  if (typeof step === 'function') {\n    fn = step; options = {}; step = null;\n  }\n\n  if (typeof options === 'function') {\n    fn = options; options = {};\n  }\n\n  if (isObject(step)) {\n    options = step; step = '';\n  }\n\n  var expand, regex = false, sep = '';\n  var opts = options || {};\n\n  if (typeof opts.silent === 'undefined') {\n    opts.silent = true;\n  }\n\n  step = step || opts.step;\n\n  // store a ref to unmodified arg\n  var origA = a, origB = b;\n\n  b = (b.toString() === '-0') ? 0 : b;\n\n  if (opts.optimize || opts.makeRe) {\n    step = step ? (step += '~') : step;\n    expand = true;\n    regex = true;\n    sep = '~';\n  }\n\n  // handle special step characters\n  if (typeof step === 'string') {\n    var match = stepRe().exec(step);\n\n    if (match) {\n      var i = match.index;\n      var m = match[0];\n\n      // repeat string\n      if (m === '+') {\n        return repeat(a, b);\n\n      // randomize a, `b` times\n      } else if (m === '?') {\n        return [randomize(a, b)];\n\n      // expand right, no regex reduction\n      } else if (m === '>') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n\n      // expand to an array, or if valid create a reduced\n      // string for a regex logic `or`\n      } else if (m === '|') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n        regex = true;\n        sep = m;\n\n      // expand to an array, or if valid create a reduced\n      // string for a regex range\n      } else if (m === '~') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n        regex = true;\n        sep = m;\n      }\n    } else if (!isNumber(step)) {\n      if (!opts.silent) {\n        throw new TypeError('fill-range: invalid step.');\n      }\n      return null;\n    }\n  }\n\n  if (/[.&*()[\\]^%$#@!]/.test(a) || /[.&*()[\\]^%$#@!]/.test(b)) {\n    if (!opts.silent) {\n      throw new RangeError('fill-range: invalid range arguments.');\n    }\n    return null;\n  }\n\n  // has neither a letter nor number, or has both letters and numbers\n  // this needs to be after the step logic\n  if (!noAlphaNum(a) || !noAlphaNum(b) || hasBoth(a) || hasBoth(b)) {\n    if (!opts.silent) {\n      throw new RangeError('fill-range: invalid range arguments.');\n    }\n    return null;\n  }\n\n  // validate arguments\n  var isNumA = isNumber(zeros(a));\n  var isNumB = isNumber(zeros(b));\n\n  if ((!isNumA && isNumB) || (isNumA && !isNumB)) {\n    if (!opts.silent) {\n      throw new TypeError('fill-range: first range argument is incompatible with second.');\n    }\n    return null;\n  }\n\n  // by this point both are the same, so we\n  // can use A to check going forward.\n  var isNum = isNumA;\n  var num = formatStep(step);\n\n  // is the range alphabetical? or numeric?\n  if (isNum) {\n    // if numeric, coerce to an integer\n    a = +a; b = +b;\n  } else {\n    // otherwise, get the charCode to expand alpha ranges\n    a = a.charCodeAt(0);\n    b = b.charCodeAt(0);\n  }\n\n  // is the pattern descending?\n  var isDescending = a > b;\n\n  // don't create a character class if the args are < 0\n  if (a < 0 || b < 0) {\n    expand = false;\n    regex = false;\n  }\n\n  // detect padding\n  var padding = isPadded(origA, origB);\n  var res, pad, arr = [];\n  var ii = 0;\n\n  // character classes, ranges and logical `or`\n  if (regex) {\n    if (shouldExpand(a, b, num, isNum, padding, opts)) {\n      // make sure the correct separator is used\n      if (sep === '|' || sep === '~') {\n        sep = detectSeparator(a, b, num, isNum, isDescending);\n      }\n      return wrap([origA, origB], sep, opts);\n    }\n  }\n\n  while (isDescending ? (a >= b) : (a <= b)) {\n    if (padding && isNum) {\n      pad = padding(a);\n    }\n\n    // custom function\n    if (typeof fn === 'function') {\n      res = fn(a, isNum, pad, ii++);\n\n    // letters\n    } else if (!isNum) {\n      if (regex && isInvalidChar(a)) {\n        res = null;\n      } else {\n        res = String.fromCharCode(a);\n      }\n\n    // numbers\n    } else {\n      res = formatPadding(a, pad);\n    }\n\n    // add result to the array, filtering any nulled values\n    if (res !== null) arr.push(res);\n\n    // increment or decrement\n    if (isDescending) {\n      a -= num;\n    } else {\n      a += num;\n    }\n  }\n\n  // now that the array is expanded, we need to handle regex\n  // character classes, ranges or logical `or` that wasn't\n  // already handled before the loop\n  if ((regex || expand) && !opts.noexpand) {\n    // make sure the correct separator is used\n    if (sep === '|' || sep === '~') {\n      sep = detectSeparator(a, b, num, isNum, isDescending);\n    }\n    if (arr.length === 1 || a < 0 || b < 0) { return arr; }\n    return wrap(arr, sep, opts);\n  }\n\n  return arr;\n}\n\n/**\n * Wrap the string with the correct regex\n * syntax.\n */\n\nfunction wrap(arr, sep, opts) {\n  if (sep === '~') { sep = '-'; }\n  var str = arr.join(sep);\n  var pre = opts && opts.regexPrefix;\n\n  // regex logical `or`\n  if (sep === '|') {\n    str = pre ? pre + str : str;\n    str = '(' + str + ')';\n  }\n\n  // regex character class\n  if (sep === '-') {\n    str = (pre && pre === '^')\n      ? pre + str\n      : str;\n    str = '[' + str + ']';\n  }\n  return [str];\n}\n\n/**\n * Check for invalid characters\n */\n\nfunction isCharClass(a, b, step, isNum, isDescending) {\n  if (isDescending) { return false; }\n  if (isNum) { return a <= 9 && b <= 9; }\n  if (a < b) { return step === 1; }\n  return false;\n}\n\n/**\n * Detect the correct separator to use\n */\n\nfunction shouldExpand(a, b, num, isNum, padding, opts) {\n  if (isNum && (a > 9 || b > 9)) { return false; }\n  return !padding && num === 1 && a < b;\n}\n\n/**\n * Detect the correct separator to use\n */\n\nfunction detectSeparator(a, b, step, isNum, isDescending) {\n  var isChar = isCharClass(a, b, step, isNum, isDescending);\n  if (!isChar) {\n    return '|';\n  }\n  return '~';\n}\n\n/**\n * Correctly format the step based on type\n */\n\nfunction formatStep(step) {\n  return Math.abs(step >> 0) || 1;\n}\n\n/**\n * Format padding, taking leading `-` into account\n */\n\nfunction formatPadding(ch, pad) {\n  var res = pad ? pad + ch : ch;\n  if (pad && ch.toString().charAt(0) === '-') {\n    res = '-' + pad + ch.toString().substr(1);\n  }\n  return res.toString();\n}\n\n/**\n * Check for invalid characters\n */\n\nfunction isInvalidChar(str) {\n  var ch = toStr(str);\n  return ch === '\\\\'\n    || ch === '['\n    || ch === ']'\n    || ch === '^'\n    || ch === '('\n    || ch === ')'\n    || ch === '`';\n}\n\n/**\n * Convert to a string from a charCode\n */\n\nfunction toStr(ch) {\n  return String.fromCharCode(ch);\n}\n\n\n/**\n * Step regex\n */\n\nfunction stepRe() {\n  return /\\?|>|\\||\\+|\\~/g;\n}\n\n/**\n * Return true if `val` has either a letter\n * or a number\n */\n\nfunction noAlphaNum(val) {\n  return /[a-z0-9]/i.test(val);\n}\n\n/**\n * Return true if `val` has both a letter and\n * a number (invalid)\n */\n\nfunction hasBoth(val) {\n  return /[a-z][0-9]|[0-9][a-z]/i.test(val);\n}\n\n/**\n * Normalize zeros for checks\n */\n\nfunction zeros(val) {\n  if (/^-*0+$/.test(val.toString())) {\n    return '0';\n  }\n  return val;\n}\n\n/**\n * Return true if `val` has leading zeros,\n * or a similar valid pattern.\n */\n\nfunction hasZeros(val) {\n  return /[^.]\\.|^-*0+[0-9]/.test(val);\n}\n\n/**\n * If the string is padded, returns a curried function with\n * the a cached padding string, or `false` if no padding.\n *\n * @param  {*} `origA` String or number.\n * @return {String|Boolean}\n */\n\nfunction isPadded(origA, origB) {\n  if (hasZeros(origA) || hasZeros(origB)) {\n    var alen = length(origA);\n    var blen = length(origB);\n\n    var len = alen >= blen\n      ? alen\n      : blen;\n\n    return function (a) {\n      return repeatStr('0', len - length(a));\n    };\n  }\n  return false;\n}\n\n/**\n * Get the string length of `val`\n */\n\nfunction length(val) {\n  return val.toString().length;\n}\n"]}