{"version":3,"sources":["../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/lib/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["'use strict';\n\nvar win32 = process && process.platform === 'win32';\nvar path = require('path');\nvar fileRe = require('filename-regex');\nvar utils = module.exports;\n\n/**\n * Module dependencies\n */\n\nutils.diff = require('arr-diff');\nutils.unique = require('array-unique');\nutils.braces = require('braces');\nutils.brackets = require('expand-brackets');\nutils.extglob = require('extglob');\nutils.isExtglob = require('is-extglob');\nutils.isGlob = require('is-glob');\nutils.typeOf = require('kind-of');\nutils.normalize = require('normalize-path');\nutils.omit = require('object.omit');\nutils.parseGlob = require('parse-glob');\nutils.cache = require('regex-cache');\n\n/**\n * Get the filename of a filepath\n *\n * @param {String} `string`\n * @return {String}\n */\n\nutils.filename = function filename(fp) {\n  var seg = fp.match(fileRe());\n  return seg && seg[0];\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern is the same as a given `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.isPath = function isPath(pattern, opts) {\n  opts = opts || {};\n  return function(fp) {\n    var unixified = utils.unixify(fp, opts);\n    if(opts.nocase){\n      return pattern.toLowerCase() === unixified.toLowerCase();\n    }\n    return pattern === unixified;\n  };\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern contains a `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.hasPath = function hasPath(pattern, opts) {\n  return function(fp) {\n    return utils.unixify(pattern, opts).indexOf(fp) !== -1;\n  };\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern matches or contains a `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.matchPath = function matchPath(pattern, opts) {\n  var fn = (opts && opts.contains)\n    ? utils.hasPath(pattern, opts)\n    : utils.isPath(pattern, opts);\n  return fn;\n};\n\n/**\n * Returns a function that returns true if the given\n * regex matches the `filename` of a file path.\n *\n * @param {RegExp} `re`\n * @return {Boolean}\n */\n\nutils.hasFilename = function hasFilename(re) {\n  return function(fp) {\n    var name = utils.filename(fp);\n    return name && re.test(name);\n  };\n};\n\n/**\n * Coerce `val` to an array\n *\n * @param  {*} val\n * @return {Array}\n */\n\nutils.arrayify = function arrayify(val) {\n  return !Array.isArray(val)\n    ? [val]\n    : val;\n};\n\n/**\n * Normalize all slashes in a file path or glob pattern to\n * forward slashes.\n */\n\nutils.unixify = function unixify(fp, opts) {\n  if (opts && opts.unixify === false) return fp;\n  if (opts && opts.unixify === true || win32 || path.sep === '\\\\') {\n    return utils.normalize(fp, false);\n  }\n  if (opts && opts.unescape === true) {\n    return fp ? fp.toString().replace(/\\\\(\\w)/g, '$1') : '';\n  }\n  return fp;\n};\n\n/**\n * Escape/unescape utils\n */\n\nutils.escapePath = function escapePath(fp) {\n  return fp.replace(/[\\\\.]/g, '\\\\$&');\n};\n\nutils.unescapeGlob = function unescapeGlob(fp) {\n  return fp.replace(/[\\\\\"']/g, '');\n};\n\nutils.escapeRe = function escapeRe(str) {\n  return str.replace(/[-[\\\\$*+?.#^\\s{}(|)\\]]/g, '\\\\$&');\n};\n\n/**\n * Expose `utils`\n */\n\nmodule.exports = utils;\n"]}