{"version":3,"sources":["../../../../../../../../node_modules/watchify/node_modules/anymatch/node_modules/micromatch/lib/glob.js"],"names":[],"mappings":"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","file":"glob.js","sourcesContent":["'use strict';\n\nvar chars = require('./chars');\nvar utils = require('./utils');\n\n/**\n * Expose `Glob`\n */\n\nvar Glob = module.exports = function Glob(pattern, options) {\n  if (!(this instanceof Glob)) {\n    return new Glob(pattern, options);\n  }\n  this.options = options || {};\n  this.pattern = pattern;\n  this.history = [];\n  this.tokens = {};\n  this.init(pattern);\n};\n\n/**\n * Initialize defaults\n */\n\nGlob.prototype.init = function(pattern) {\n  this.orig = pattern;\n  this.negated = this.isNegated();\n  this.options.track = this.options.track || false;\n  this.options.makeRe = true;\n};\n\n/**\n * Push a change into `glob.history`. Useful\n * for debugging.\n */\n\nGlob.prototype.track = function(msg) {\n  if (this.options.track) {\n    this.history.push({msg: msg, pattern: this.pattern});\n  }\n};\n\n/**\n * Return true if `glob.pattern` was negated\n * with `!`, also remove the `!` from the pattern.\n *\n * @return {Boolean}\n */\n\nGlob.prototype.isNegated = function() {\n  if (this.pattern.charCodeAt(0) === 33 /* '!' */) {\n    this.pattern = this.pattern.slice(1);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Expand braces in the given glob pattern.\n *\n * We only need to use the [braces] lib when\n * patterns are nested.\n */\n\nGlob.prototype.braces = function() {\n  if (this.options.nobraces !== true && this.options.nobrace !== true) {\n    // naive/fast check for imbalanced characters\n    var a = this.pattern.match(/[\\{\\(\\[]/g);\n    var b = this.pattern.match(/[\\}\\)\\]]/g);\n\n    // if imbalanced, don't optimize the pattern\n    if (a && b && (a.length !== b.length)) {\n      this.options.makeRe = false;\n    }\n\n    // expand brace patterns and join the resulting array\n    var expanded = utils.braces(this.pattern, this.options);\n    this.pattern = expanded.join('|');\n  }\n};\n\n/**\n * Expand bracket expressions in `glob.pattern`\n */\n\nGlob.prototype.brackets = function() {\n  if (this.options.nobrackets !== true) {\n    this.pattern = utils.brackets(this.pattern);\n  }\n};\n\n/**\n * Expand bracket expressions in `glob.pattern`\n */\n\nGlob.prototype.extglob = function() {\n  if (this.options.noextglob === true) return;\n\n  if (utils.isExtglob(this.pattern)) {\n    this.pattern = utils.extglob(this.pattern, {escape: true});\n  }\n};\n\n/**\n * Parse the given pattern\n */\n\nGlob.prototype.parse = function(pattern) {\n  this.tokens = utils.parseGlob(pattern || this.pattern, true);\n  return this.tokens;\n};\n\n/**\n * Replace `a` with `b`. Also tracks the change before and\n * after each replacement. This is disabled by default, but\n * can be enabled by setting `options.track` to true.\n *\n * Also, when the pattern is a string, `.split()` is used,\n * because it's much faster than replace.\n *\n * @param  {RegExp|String} `a`\n * @param  {String} `b`\n * @param  {Boolean} `escape` When `true`, escapes `*` and `?` in the replacement.\n * @return {String}\n */\n\nGlob.prototype._replace = function(a, b, escape) {\n  this.track('before (find): \"' + a + '\" (replace with): \"' + b + '\"');\n  if (escape) b = esc(b);\n  if (a && b && typeof a === 'string') {\n    this.pattern = this.pattern.split(a).join(b);\n  } else {\n    this.pattern = this.pattern.replace(a, b);\n  }\n  this.track('after');\n};\n\n/**\n * Escape special characters in the given string.\n *\n * @param  {String} `str` Glob pattern\n * @return {String}\n */\n\nGlob.prototype.escape = function(str) {\n  this.track('before escape: ');\n  var re = /[\"\\\\](['\"]?[^\"'\\\\]['\"]?)/g;\n\n  this.pattern = str.replace(re, function($0, $1) {\n    var o = chars.ESC;\n    var ch = o && o[$1];\n    if (ch) {\n      return ch;\n    }\n    if (/[a-z]/i.test($0)) {\n      return $0.split('\\\\').join('');\n    }\n    return $0;\n  });\n\n  this.track('after escape: ');\n};\n\n/**\n * Unescape special characters in the given string.\n *\n * @param  {String} `str`\n * @return {String}\n */\n\nGlob.prototype.unescape = function(str) {\n  var re = /__([A-Z]+)_([A-Z]+)__/g;\n  this.pattern = str.replace(re, function($0, $1) {\n    return chars[$1][$0];\n  });\n  this.pattern = unesc(this.pattern);\n};\n\n/**\n * Escape/unescape utils\n */\n\nfunction esc(str) {\n  str = str.split('?').join('%~');\n  str = str.split('*').join('%%');\n  return str;\n}\n\nfunction unesc(str) {\n  str = str.split('%~').join('?');\n  str = str.split('%%').join('*');\n  return str;\n}\n"]}