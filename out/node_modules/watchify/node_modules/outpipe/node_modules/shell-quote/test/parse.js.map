{"version":3,"sources":["../../../../../../../../node_modules/watchify/node_modules/outpipe/node_modules/shell-quote/test/parse.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,KAAR,EAAe,KAA3B;;AAEA,KAAK,sBAAL,EAA6B,UAAU,CAAV,EAAa;AACtC,MAAE,IAAF,CAAO,MAAM,aAAN,CAAP,EAA6B,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAA7B;AACA,MAAE,IAAF,CACI,MAAM,qDAAN,CADJ,EAEI,CAAE,MAAF,EAAU,MAAV,EAAkB,aAAlB,EAAiC,mBAAjC,CAFJ;AAIA,MAAE,IAAF,CAAO,MAAM,WAAN,CAAP,EAA2B,CAAE,GAAF,EAAO,KAAP,EAAc,GAAd,CAA3B;AACA,MAAE,IAAF,CAAO,MAAM,iBAAN,CAAP,EAAiC,CAAE,OAAF,EAAW,OAAX,CAAjC;AACA,MAAE,IAAF,CAAO,MAAM,wBAAN,CAAP,EAAwC,CAAE,MAAF,EAAU,aAAV,CAAxC;AACA,MAAE,IAAF,CAAO,MAAM,EAAN,CAAP,EAAkB,EAAlB;AACA,MAAE,IAAF,CAAO,MAAM,GAAN,CAAP,EAAmB,EAAnB;AACA,MAAE,IAAF,CAAO,MAAM,IAAN,CAAP,EAAoB,EAApB;AACA,MAAE,IAAF,CAAO,MAAM,WAAN,CAAP,EAA2B,CAAE,SAAF,CAA3B;AACA,MAAE,IAAF,CAAO,MAAM,kBAAN,CAAP,EAAkC,CAAE,UAAF,EAAc,GAAd,CAAlC;AACA,MAAE,IAAF,CAAO,MAAM,yBAAN,CAAP,EAAyC,CAAE,aAAF,EAAiB,GAAjB,CAAzC;AACA,MAAE,IAAF,CAAO,MAAM,eAAN,CAAP,EAA+B,CAAC,GAAD,EAAM,OAAN,CAA/B;AACA,MAAE,IAAF,CAAO,MAAM,aAAN,EAAqB,EAArB,EAAyB,EAAE,QAAQ,GAAV,EAAzB,CAAP,EAAiD,CAAC,GAAD,EAAM,QAAN,CAAjD;;AAEA,MAAE,GAAF;AACH,CAnBD","file":"parse.js","sourcesContent":["var test = require('tape');\nvar parse = require('../').parse;\n\ntest('parse shell commands', function (t) {\n    t.same(parse('a \\'b\\' \"c\"'), [ 'a', 'b', 'c' ]);\n    t.same(\n        parse('beep \"boop\" \\'foo bar baz\\' \"it\\'s \\\\\"so\\\\\" groovy\"'),\n        [ 'beep', 'boop', 'foo bar baz', 'it\\'s \"so\" groovy' ]\n    );\n    t.same(parse('a b\\\\ c d'), [ 'a', 'b c', 'd' ]);\n    t.same(parse('\\\\$beep bo\\\\`op'), [ '$beep', 'bo`op' ]);\n    t.same(parse('echo \"foo = \\\\\"foo\\\\\"\"'), [ 'echo', 'foo = \"foo\"' ]);\n    t.same(parse(''), []);\n    t.same(parse(' '), []);\n    t.same(parse(\"\\t\"), []);\n    t.same(parse('a\"b c d\"e'), [ 'ab c de' ]);\n    t.same(parse('a\\\\ b\"c d\"\\\\ e f'), [ 'a bc d e', 'f' ]);\n    t.same(parse('a\\\\ b\"c d\"\\\\ e\\'f g\\' h'), [ 'a bc d ef g', 'h' ]);\n    t.same(parse(\"x \\\"bl'a\\\"'h'\"), ['x', \"bl'ah\"])\n    t.same(parse(\"x bl^'a^'h'\", {}, { escape: '^'}), ['x', \"bl'a'h\"]);\n\n    t.end();\n});\n"]}