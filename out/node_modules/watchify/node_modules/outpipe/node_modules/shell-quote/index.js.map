{"version":3,"sources":["../../../../../../../node_modules/watchify/node_modules/outpipe/node_modules/shell-quote/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["var json = typeof JSON !== undefined ? JSON : require('jsonify');\nvar map = require('array-map');\nvar filter = require('array-filter');\nvar reduce = require('array-reduce');\n\nexports.quote = function (xs) {\n    return map(xs, function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '\\\\$1'); \n        }\n    }).join(' ');\n};\n\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return reduce(mapped, function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(map(filter(xs, Boolean), function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return json.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = filter(s.match(chunker), Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return map(match, function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined) r = '';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + json.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n"]}