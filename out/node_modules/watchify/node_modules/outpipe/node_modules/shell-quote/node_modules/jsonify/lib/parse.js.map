{"version":3,"sources":["../../../../../../../../../../node_modules/watchify/node_modules/outpipe/node_modules/shell-quote/node_modules/jsonify/lib/parse.js"],"names":[],"mappings":"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","file":"parse.js","sourcesContent":["var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n"]}