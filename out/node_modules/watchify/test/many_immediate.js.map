{"version":3,"sources":["../../../../node_modules/watchify/test/many_immediate.js"],"names":[],"mappings":"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","file":"many_immediate.js","sourcesContent":["var test = require('tape');\nvar fs = require('fs');\nvar path = require('path');\nvar mkdirp = require('mkdirp');\nvar spawn = require('win-spawn');\nvar split = require('split');\n\nvar cmd = path.resolve(__dirname, '../bin/cmd.js');\nvar os = require('os');\nvar tmpdir = path.join((os.tmpdir || os.tmpDir)(), 'watchify-' + Math.random());\n\nvar files = {\n    main: path.join(tmpdir, 'main.js'),\n    robot: path.join(tmpdir, 'robot.js'),\n    lines: path.join(tmpdir, 'lines.txt'),\n    bundle: path.join(tmpdir, 'bundle.js')\n};\n\nvar edits = [\n    { file: 'lines', source: 'robo-boogie' },\n    { file: 'lines', source: 'dinosaurus rex' },\n    {\n        file: 'robot',\n        source: 'module.exports = function (n) { return n * 111 }',\n        next: true\n    },\n    { file: 'main', source: [\n        'var fs = require(\"fs\");',\n        'var robot = require(\"./robot.js\");',\n        'var src = fs.readFileSync(__dirname + \"/lines.txt\", \"utf8\");',\n        'console.log(src.toUpperCase() + \" \" + robot(src.length));'\n    ].join('\\n') },\n    { file: 'lines', source: 't-rex' },\n    {\n        file: 'robot',\n        source: 'module.exports = function (n) { return n * 100 }',\n    }\n];\n\nvar expected = [\n    'BEEP\\nBOOP\\n',\n    'ROBO-BOOGIE\\n',\n    'DINOSAURUS REX\\n',\n    'DINOSAURUS REX 1554\\n',\n    'T-REX 555\\n',\n    'T-REX 500\\n'\n];\n\nmkdirp.sync(tmpdir);\nfs.writeFileSync(files.main, [\n    'var fs = require(\"fs\");',\n    'var src = fs.readFileSync(__dirname + \"/lines.txt\", \"utf8\");',\n    'console.log(src.toUpperCase());'\n].join('\\n'));\nfs.writeFileSync(files.lines, 'beep\\nboop');\n\ntest('many immediate', function (t) {\n    t.plan(expected.length * 2 + edits.length);\n    var ps = spawn(cmd, [\n        files.main,\n        '-t', require.resolve('brfs'), '-v',\n        '-o', files.bundle\n    ]);\n    ps.stdout.pipe(process.stdout);\n    ps.stderr.pipe(process.stdout);\n    var lineNum = 0;\n    ps.stderr.pipe(split()).on('data', function (line) {\n        if (line.length === 0) return;\n        \n        run(files.bundle, function (err, output) {\n            t.ifError(err);\n            t.equal(output, expected.shift());\n            \n            (function next () {\n                if (edits.length === 0) return;\n                var edit = edits.shift();\n                fs.writeFile(files[edit.file], edit.source, function (err) {\n                    t.ifError(err);\n                    if (edit.next) next();\n                });\n            })();\n        })\n    });\n    \n    t.on('end', function () {\n        ps.kill();\n    });\n});\n\nfunction run (file, cb) {\n    var ps = spawn(process.execPath, [ file ]);\n    var data = [];\n    ps.stdout.on('data', function (buf) { data.push(buf) });\n    ps.stdout.on('end', function () {\n        cb(null, Buffer.concat(data).toString('utf8'));\n    });\n    ps.on('error', cb);\n    return ps;\n}\n"]}