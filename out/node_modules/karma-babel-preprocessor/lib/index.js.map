{"version":3,"sources":["../../../../node_modules/karma-babel-preprocessor/lib/index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,YAAR,CAAZ;;AAEA;AACA;AACA;AACA;AACA,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C,MAA1C,EAAkD,MAAlD,EAA0D;AACxD,MAAI,MAAM,OAAO,MAAP,CAAc,oBAAd,CAAV;AACA,WAAS,UAAU,EAAnB;;AAEA,WAAS,UAAT,CAAoB,OAApB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC;AACvC,QAAI,KAAJ,CAAU,kBAAV,EAA8B,KAAK,YAAnC;;AAEA,QAAI;AACF,UAAI,UAAU,cAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,IAApC,CAAd;AACA,WAAK,IAAL,GAAY,QAAQ,QAAR,IAAoB,KAAK,IAArC;;AAEA,UAAI,YAAY,MAAM,SAAN,CAAgB,OAAhB,EAAyB,OAAzB,EAAkC,IAAlD;AACA,WAAK,IAAL,EAAW,SAAX;AACD,KAND,CAME,OAAO,CAAP,EAAU;AACV,UAAI,KAAJ,CAAU,YAAV,EAAwB,EAAE,OAA1B,EAAmC,KAAK,YAAxC;AACA,WAAK,CAAL,EAAQ,IAAR;AACD;AACF;;AAED,SAAO,UAAP;AACD;;AAED,SAAS,aAAT,CAAuB,YAAvB,EAAqC,UAArC,EAAiD,MAAjD,EAAyD,IAAzD,EAA+D;AAC7D;AACA,iBAAe,OAAO,KAAP,CAAa,EAAb,EAAiB,YAAjB,CAAf;AACA,SAAO,aAAa,IAApB;;AAEA,MAAI,gBAAgB,qBAAqB,YAArB,EAAmC,MAAnC,EAA2C,IAA3C,CAApB;AACA,MAAI,cAAc,qBAAqB,UAArB,EAAiC,MAAjC,EAAyC,IAAzC,CAAlB;AACA,MAAI,UAAU,OAAO,KAAP,CACZ,EAAE,UAAU,KAAK,YAAjB,EADY,EAEZ,WAAW,OAAX,IAAsB,EAFV,EAGZ,aAAa,OAAb,IAAwB,EAHZ,EAIZ,WAJY,EAKZ,aALY,CAAd;AAOA,SAAO,OAAP;AACD;;AAED,SAAS,oBAAT,CAA8B,MAA9B,EAAsC,MAAtC,EAA8C,IAA9C,EAAoD;AAClD,SAAO,OAAO,IAAP,CAAY,MAAZ,EACJ,MADI,CACG,UAAU,UAAV,EAAsB;AAAE,WAAO,eAAe,SAAtB;AAAkC,GAD7D,EAEJ,MAFI,CAEG,UAAU,GAAV,EAAe,UAAf,EAA2B;AACjC,QAAI,aAAa,OAAO,UAAP,CAAjB;AACA,QAAI,CAAC,OAAO,UAAP,CAAkB,UAAlB,CAAL,EAAoC;AAClC,YAAM,IAAI,KAAJ,CAAU,sBAAsB,UAAtB,GAAmC,uBAA7C,CAAN;AACD;AACD,QAAI,UAAJ,IAAkB,WAAW,IAAX,CAAlB;AACA,WAAO,GAAP;AACD,GATI,EASF,EATE,CAAP;AAUD;;AAED,mBAAmB,OAAnB,GACE,CAAC,MAAD,EAAS,0BAAT,EAAqC,QAArC,EAA+C,QAA/C,CADF;;AAGA,OAAO,OAAP,GAAiB;AACf,wBAAsB,CAAC,SAAD,EAAY,kBAAZ;AADP,CAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar babel = require('babel-core');\n\n// @param args {Object} - Config object of custom preprocessor.\n// @param config {Object} - Config object of babelPreprocessor.\n// @param logger {Object} - Karma's logger.\n// @helper helper {Object} - Karma's helper functions.\nfunction createPreprocessor(args, config, logger, helper) {\n  var log = logger.create('preprocessor.babel');\n  config = config || {};\n\n  function preprocess(content, file, done) {\n    log.debug('Processing \"%s\".', file.originalPath);\n\n    try {\n      var options = createOptions(args, config, helper, file);\n      file.path = options.filename || file.path;\n\n      var processed = babel.transform(content, options).code;\n      done(null, processed);\n    } catch (e) {\n      log.error('%s\\n at %s', e.message, file.originalPath);\n      done(e, null);\n    }\n  }\n\n  return preprocess;\n}\n\nfunction createOptions(customConfig, baseConfig, helper, file) {\n  // Ignore 'base' property of custom preprocessor's config.\n  customConfig = helper.merge({}, customConfig);\n  delete customConfig.base;\n\n  var customPerFile = createPerFileOptions(customConfig, helper, file);\n  var basePerFile = createPerFileOptions(baseConfig, helper, file);\n  var options = helper.merge(\n    { filename: file.originalPath },\n    baseConfig.options || {},\n    customConfig.options || {},\n    basePerFile,\n    customPerFile\n  );\n  return options;\n}\n\nfunction createPerFileOptions(config, helper, file) {\n  return Object.keys(config)\n    .filter(function (optionName) { return optionName !== 'options'; })\n    .reduce(function (acc, optionName) {\n      var configFunc = config[optionName];\n      if (!helper.isFunction(configFunc)) {\n        throw new Error('Per-file option \"' + optionName + '\" must be a function.');\n      }\n      acc[optionName] = configFunc(file);\n      return acc;\n    }, {});\n}\n\ncreatePreprocessor.$inject =\n  ['args', 'config.babelPreprocessor', 'logger', 'helper'];\n\nmodule.exports = {\n  'preprocessor:babel': ['factory', createPreprocessor]\n};\n"]}