{"version":3,"sources":["../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/worker-test.js"],"names":[],"mappings":";;AAAA;;AAEA,SAAS,QAAT,EAAmB,YAAY;AAC7B,MAAI,0BAA0B,SAA1B,uBAA0B,CAAU,UAAV,EAAsB;AAClD,QAAI,YAAY,iBAAhB;AACA,QAAI,WAAW,QAAX,KAAwB,SAA5B,EAAuC;AACrC,mBAAa,MAAM,WAAW,QAA9B;AACD;AACD,QAAI,WAAW,MAAX,KAAsB,SAA1B,EAAqC;AACnC,mBAAa,MAAM,WAAW,MAAjB,GAA0B,GAAvC;AACD;AACD,QAAI,WAAW,OAAX,KAAuB,SAA3B,EAAsC;AACpC,mBAAa,OAAO,WAAW,OAA/B;AACD;AACD,WAAO,IAAI,KAAJ,CAAU,SAAV,CAAP;AACD,GAZD;AAaA,MAAI,mCAAmC,SAAnC,gCAAmC,GAAY;AACjD,QAAI,0BAA0B,OAAO,MAAP,KAAkB,WAAhD;AACA,QAAI,yBAAyB,OAAO,QAAP,KAAoB,WAAjD;AACA,QAAI,yBAAyB,0BAA0B,SAAS,QAAT,KAAsB,OAA7E;;AAEA;AACA;AACA;AACA;AACA,WAAO,2BAA2B,CAAC,sBAAnC;AACD,GAVD;;AAYA,MAAI,kCAAJ,EAAwC;AACtC,OAAG,qBAAH,EAA0B,UAAU,IAAV,EAAgB;AACxC,UAAI,SAAS,IAAI,MAAJ,CAAW,wBAAX,CAAb;AACA,aAAO,gBAAP,CAAwB,OAAxB,EAAiC,UAAU,UAAV,EAAsB;AAAE,cAAM,wBAAwB,UAAxB,CAAN;AAA4C,OAArG;AACA,aAAO,gBAAP,CAAwB,SAAxB,EAAmC,UAAU,YAAV,EAAwB;AACzD,eAAO,aAAa,IAApB,EAA0B,EAA1B,CAA6B,GAA7B,CAAiC,OAAjC;AACA;AACD,OAHD;AAID,KAPD;AAQD;AACF,CApCD","file":"worker-test.js","sourcesContent":["/* global describe, it, expect, Worker, location */\n\ndescribe('Worker', function () {\n  var workerErrorEventToError = function (errorEvent) {\n    var errorText = 'Error in Worker';\n    if (errorEvent.filename !== undefined) {\n      errorText += ' ' + errorEvent.filename;\n    }\n    if (errorEvent.lineno !== undefined) {\n      errorText += '(' + errorEvent.lineno + ')';\n    }\n    if (errorEvent.message !== undefined) {\n      errorText += ': ' + errorEvent.message;\n    }\n    return new Error(errorText);\n  };\n  var canRunWorkerTestInCurrentContext = function () {\n    var workerConstructorExists = typeof Worker !== 'undefined';\n    var locationPropertyExists = typeof location !== 'undefined';\n    var runningOnFileUriScheme = locationPropertyExists && location.protocol === 'file:';\n\n    // The Worker constructor doesn't exist in some older browsers nor does it exist in non-browser contexts like Node.\n    // Additionally some browsers (at least Chrome) don't allow Workers over file URIs.\n    // To prevent false negative test failures in the cases where Workers are unavailable for either of those reasons\n    // we skip this test.\n    return workerConstructorExists && !runningOnFileUriScheme;\n  };\n\n  if (canRunWorkerTestInCurrentContext()) {\n    it('can import es6-shim', function (done) {\n      var worker = new Worker('worker-runner.workerjs');\n      worker.addEventListener('error', function (errorEvent) { throw workerErrorEventToError(errorEvent); });\n      worker.addEventListener('message', function (messageEvent) {\n        expect(messageEvent.data).to.eql('ready');\n        done();\n      });\n    });\n  }\n});\n"]}