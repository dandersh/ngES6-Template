{"version":3,"sources":["../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/json.js"],"names":[],"mappings":"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","file":"json.js","sourcesContent":["/* global describe, it, xit, expect, require */\ndescribe('JSON', function () {\n  var functionsHaveNames = (function foo() {}).name === 'foo';\n  var ifFunctionsHaveNamesIt = functionsHaveNames ? it : xit;\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';\n  var ifSymbolsIt = hasSymbols ? it : xit;\n  var ifSymbolsDescribe = hasSymbols ? describe : xit;\n\n  describe('.stringify()', function () {\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(JSON.stringify.name).to.equal('stringify');\n    });\n\n    ifSymbolsIt('serializes a Symbol to undefined', function () {\n      expect(JSON.stringify(Symbol())).to.equal(undefined);\n    });\n\n    ifSymbolsIt('serializes a Symbol object to {}', function () {\n      expect(function stringifyObjectSymbol() { JSON.stringify(Object(Symbol())); }).not.to['throw']();\n      expect(JSON.stringify(Object(Symbol()))).to.equal('{}');\n    });\n\n    ifSymbolsIt('serializes Symbols in an Array to null', function () {\n      expect(JSON.stringify([Symbol('foo')])).to.equal('[null]');\n    });\n\n    ifSymbolsIt('serializes Symbol objects in an Array to {}', function () {\n      expect(function stringifyObjectSymbolInArray() { JSON.stringify([Object(Symbol('foo'))]); }).not.to['throw']();\n      expect(JSON.stringify([Object(Symbol('foo'))])).to.equal('[{}]');\n    });\n\n    ifSymbolsDescribe('skips symbol properties and values in an object', function () {\n      var enumSym = Symbol('enumerable');\n      var nonenum = Symbol('non-enumerable');\n      var createObject = function () {\n        var obj = { a: 1 };\n        obj[enumSym] = true;\n        obj.sym = enumSym;\n        Object.defineProperty(obj, nonenum, { enumerable: false, value: true });\n        expect(Object.getOwnPropertySymbols(obj)).to.eql([enumSym, nonenum]);\n        return obj;\n      };\n\n      it('works with no replacer', function () {\n        var obj = createObject();\n        expect(JSON.stringify(obj)).to.equal('{\"a\":1}');\n        expect(JSON.stringify(obj, null, '|')).to.equal('{\\n|\"a\": 1\\n}');\n      });\n\n      it('works with a replacer function', function () {\n        var tuples = [];\n        var replacer = function (key, value) {\n          tuples.push([this, key, value]);\n          return value;\n        };\n        var obj = createObject();\n        expect(JSON.stringify(obj, replacer, '|')).to.equal('{\\n|\"a\": 1\\n}'); // populate `tuples` array\n        expect(tuples).to.eql([\n          [{ '': obj }, '', obj],\n          [obj, 'a', 1],\n          [obj, 'sym', enumSym]\n        ]);\n      });\n\n      it('works with a replacer array', function () {\n        var obj = createObject();\n        obj.foo = 'bar';\n        obj[Symbol.prototype.toString.call(enumSym)] = 'tricksy';\n        expect(JSON.stringify(obj, ['a', enumSym])).to.equal('{\"a\":1}');\n        expect(JSON.stringify(obj, ['a', enumSym], '|')).to.equal('{\\n|\"a\": 1\\n}');\n      });\n\n      it('ignores a non-array non-callable replacer object', function () {\n        expect(JSON.stringify('z', { test: null })).to.equal('\"z\"');\n      });\n    });\n  });\n});\n"]}