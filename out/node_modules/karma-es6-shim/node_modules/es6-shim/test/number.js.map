{"version":3,"sources":["../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/number.js"],"names":[],"mappings":"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","file":"number.js","sourcesContent":["/* global describe, it, xit, expect, require */\n\ndescribe('Number', function () {\n  var functionsHaveNames = (function foo() {}).name === 'foo';\n  var ifFunctionsHaveNamesIt = functionsHaveNames ? it : xit;\n  var ifShimIt = (typeof process !== 'undefined' && process.env.NO_ES6_SHIM) ? it.skip : it;\n\n  var integers = [5295, -5295, -9007199254740991, 9007199254740991, 0, -0];\n  var nonIntegers = [-9007199254741992, 9007199254741992, 5.9];\n  var infinities = [Infinity, -Infinity];\n\n  var valueOfThree = { valueOf: function () { return 3; } };\n  var valueOfNaN = { valueOf: function () { return NaN; } };\n  var valueOfThrows = { valueOf: function () { throw Object(17); } };\n  var toStringThrows = { toString: function () { throw Object(42); } };\n  var toPrimitiveThrows = {\n    valueOf: function () { throw Object(17); },\n    toString: function () { throw Object(42); }\n  };\n\n  var nonNumbers = [\n    undefined,\n    true,\n    false,\n    null,\n    {},\n    [],\n    'str',\n    '',\n    valueOfThree,\n    valueOfNaN,\n    valueOfThrows,\n    toStringThrows,\n    toPrimitiveThrows,\n    /a/g\n  ];\n  var expectTrue = function (item) {\n    expect(item).to.equal(true);\n  };\n  var expectFalse = function (item) {\n    expect(item).to.equal(false);\n  };\n\n  ifShimIt('is on the exported object', function () {\n    var exported = require('../');\n    expect(exported.Number).to.equal(Number);\n  });\n\n  describe('Number constants', function () {\n    it('should have max safe integer', function () {\n      expect(Number).to.have.property('MAX_SAFE_INTEGER');\n      expect(Number.propertyIsEnumerable('MAX_SAFE_INTEGER')).to.equal(false);\n      expect(Number.MAX_SAFE_INTEGER).to.equal(Math.pow(2, 53) - 1);\n    });\n\n    it('should have min safe integer', function () {\n      expect(Number).to.have.property('MIN_SAFE_INTEGER');\n      expect(Number.propertyIsEnumerable('MIN_SAFE_INTEGER')).to.equal(false);\n      expect(Number.MIN_SAFE_INTEGER).to.equal(-Math.pow(2, 53) + 1);\n    });\n\n    it('should have epsilon', function () {\n      expect(Number).to.have.property('EPSILON');\n      expect(Number.propertyIsEnumerable('EPSILON')).to.equal(false);\n      expect(Number.EPSILON).to.equal(2.2204460492503130808472633361816e-16);\n    });\n\n    it('should have NaN', function () {\n      expect(Number).to.have.property('NaN');\n      expect(Number.propertyIsEnumerable('NaN')).to.equal(false);\n      expect(isNaN(Number.NaN)).to.equal(true);\n    });\n\n    it('should have MAX_VALUE', function () {\n      expect(Number).to.have.property('MAX_VALUE');\n      expect(Number.propertyIsEnumerable('MAX_VALUE')).to.equal(false);\n      expect(Number.MAX_VALUE).to.equal(1.7976931348623157e+308);\n    });\n\n    it('should have MIN_VALUE', function () {\n      expect(Number).to.have.property('MIN_VALUE');\n      expect(Number.propertyIsEnumerable('MIN_VALUE')).to.equal(false);\n      expect(Number.MIN_VALUE).to.equal(5e-324);\n    });\n\n    it('should have NEGATIVE_INFINITY', function () {\n      expect(Number).to.have.property('NEGATIVE_INFINITY');\n      expect(Number.propertyIsEnumerable('NEGATIVE_INFINITY')).to.equal(false);\n      expect(Number.NEGATIVE_INFINITY).to.equal(-Infinity);\n    });\n\n    it('should have POSITIVE_INFINITY', function () {\n      expect(Number).to.have.property('POSITIVE_INFINITY');\n      expect(Number.propertyIsEnumerable('POSITIVE_INFINITY')).to.equal(false);\n      expect(Number.POSITIVE_INFINITY).to.equal(Infinity);\n    });\n  });\n\n  describe('.parseInt()', function () {\n    if (!Number.hasOwnProperty('parseInt')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('parseInt');\n      });\n    }\n\n    it('should work', function () {\n      /* eslint-disable radix */\n      expect(Number.parseInt('601')).to.equal(601);\n      /* eslint-enable radix */\n    });\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.parseInt).to.have.property('name', 'parseInt');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('parseInt').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      // WebKit nightly had the wrong length; fixed in https://bugs.webkit.org/show_bug.cgi?id=143657\n      expect(Number.parseInt).to.have.property('length', 2);\n    });\n\n    it('is the same object as the global parseInt', function () {\n      // fixed in WebKit nightly in https://bugs.webkit.org/show_bug.cgi?id=143799#add_comment\n      expect(Number.parseInt).to.equal(parseInt);\n    });\n  });\n\n  describe('.parseFloat()', function () {\n    if (!Number.hasOwnProperty('parseFloat')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('parseFloat');\n      });\n    }\n\n    it('should work', function () {\n      expect(Number.parseFloat('5.5')).to.equal(5.5);\n    });\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.parseFloat).to.have.property('name', 'parseFloat');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('parseFloat').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      expect(Number.parseFloat).to.have.property('length', 1);\n    });\n  });\n\n  describe('.isFinite()', function () {\n    if (!Number.hasOwnProperty('isFinite')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('isFinite');\n      });\n    }\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.isFinite).to.have.property('name', 'isFinite');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('isFinite').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      expect(Number.isFinite).to.have.property('length', 1);\n    });\n\n    it('should work', function () {\n      integers.map(Number.isFinite).forEach(expectTrue);\n      infinities.map(Number.isFinite).forEach(expectFalse);\n      expect(Number.isFinite(Infinity)).to.equal(false);\n      expect(Number.isFinite(-Infinity)).to.equal(false);\n      expect(Number.isFinite(NaN)).to.equal(false);\n      expect(Number.isFinite(4)).to.equal(true);\n      expect(Number.isFinite(4.5)).to.equal(true);\n      expect(Number.isFinite('hi')).to.equal(false);\n      expect(Number.isFinite('1.3')).to.equal(false);\n      expect(Number.isFinite('51')).to.equal(false);\n      expect(Number.isFinite(0)).to.equal(true);\n      expect(Number.isFinite(-0)).to.equal(true);\n      expect(Number.isFinite(valueOfThree)).to.equal(false);\n      expect(Number.isFinite(valueOfNaN)).to.equal(false);\n      expect(Number.isFinite(valueOfThrows)).to.equal(false);\n      expect(Number.isFinite(toStringThrows)).to.equal(false);\n      expect(Number.isFinite(toPrimitiveThrows)).to.equal(false);\n    });\n\n    it('should not be confused by type coercion', function () {\n      nonNumbers.map(Number.isFinite).forEach(expectFalse);\n    });\n  });\n\n  describe('.isInteger()', function () {\n    if (!Number.hasOwnProperty('isInteger')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('isInteger');\n      });\n    }\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.isInteger).to.have.property('name', 'isInteger');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('isInteger').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      expect(Number.isInteger).to.have.property('length', 1);\n    });\n\n    it('should be truthy on integers', function () {\n      integers.map(Number.isInteger).forEach(expectTrue);\n      expect(Number.isInteger(4)).to.equal(true);\n      expect(Number.isInteger(4.0)).to.equal(true);\n      expect(Number.isInteger(1801439850948)).to.equal(true);\n    });\n\n    it('should be false when the type is not number', function () {\n      nonNumbers.forEach(function (thing) {\n        expect(Number.isInteger(thing)).to.equal(false);\n      });\n    });\n\n    it('should be false when NaN', function () {\n      expect(Number.isInteger(NaN)).to.equal(false);\n    });\n\n    it('should be false when ∞', function () {\n      expect(Number.isInteger(Infinity)).to.equal(false);\n      expect(Number.isInteger(-Infinity)).to.equal(false);\n    });\n\n    it('should be false when number is not integer', function () {\n      expect(Number.isInteger(3.4)).to.equal(false);\n      expect(Number.isInteger(-3.4)).to.equal(false);\n    });\n\n    it('should be true when abs(number) is 2^53 or larger', function () {\n      expect(Number.isInteger(Math.pow(2, 53))).to.equal(true);\n      expect(Number.isInteger(Math.pow(2, 54))).to.equal(true);\n      expect(Number.isInteger(-Math.pow(2, 53))).to.equal(true);\n      expect(Number.isInteger(-Math.pow(2, 54))).to.equal(true);\n    });\n\n    it('should be true when abs(number) is less than 2^53', function () {\n      var safeIntegers = [0, 1, Math.pow(2, 53) - 1];\n      safeIntegers.forEach(function (integer) {\n        expect(Number.isInteger(integer)).to.equal(true);\n        expect(Number.isInteger(-integer)).to.equal(true);\n      });\n    });\n  });\n\n  describe('.isSafeInteger()', function () {\n    if (!Number.hasOwnProperty('isSafeInteger')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('isSafeInteger');\n      });\n    }\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.isSafeInteger).to.have.property('name', 'isSafeInteger');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('isSafeInteger').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      expect(Number.isSafeInteger).to.have.property('length', 1);\n    });\n\n    it('should be truthy on integers', function () {\n      integers.map(Number.isSafeInteger).forEach(expectTrue);\n      expect(Number.isSafeInteger(4)).to.equal(true);\n      expect(Number.isSafeInteger(4.0)).to.equal(true);\n      expect(Number.isSafeInteger(1801439850948)).to.equal(true);\n    });\n\n    it('should be false when the type is not number', function () {\n      nonNumbers.forEach(function (thing) {\n        expect(Number.isSafeInteger(thing)).to.equal(false);\n      });\n    });\n\n    it('should be false when NaN', function () {\n      expect(Number.isSafeInteger(NaN)).to.equal(false);\n    });\n\n    it('should be false when ∞', function () {\n      expect(Number.isSafeInteger(Infinity)).to.equal(false);\n      expect(Number.isSafeInteger(-Infinity)).to.equal(false);\n    });\n\n    it('should be false when number is not integer', function () {\n      expect(Number.isSafeInteger(3.4)).to.equal(false);\n      expect(Number.isSafeInteger(-3.4)).to.equal(false);\n    });\n\n    it('should be false when abs(number) is 2^53 or larger', function () {\n      expect(Number.isSafeInteger(Math.pow(2, 53))).to.equal(false);\n      expect(Number.isSafeInteger(Math.pow(2, 54))).to.equal(false);\n      expect(Number.isSafeInteger(-Math.pow(2, 53))).to.equal(false);\n      expect(Number.isSafeInteger(-Math.pow(2, 54))).to.equal(false);\n    });\n\n    it('should be true when abs(number) is less than 2^53', function () {\n      var safeIntegers = [0, 1, Math.pow(2, 53) - 1];\n      safeIntegers.forEach(function (integer) {\n        expect(Number.isSafeInteger(integer)).to.equal(true);\n        expect(Number.isSafeInteger(-integer)).to.equal(true);\n      });\n    });\n  });\n\n  describe('.isNaN()', function () {\n    if (!Number.hasOwnProperty('isNaN')) {\n      return it('exists', function () {\n        expect(Number).to.have.property('isNaN');\n      });\n    }\n\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(Number.isNaN).to.have.property('name', 'isNaN');\n    });\n\n    it('is not enumerable', function () {\n      expect(Number).ownPropertyDescriptor('isNaN').to.have.property('enumerable', false);\n    });\n\n    it('has the right arity', function () {\n      expect(Number.isNaN).to.have.property('length', 1);\n    });\n\n    it('should be truthy only on NaN', function () {\n      integers.concat(nonIntegers).map(Number.isNaN).forEach(expectFalse);\n      nonNumbers.map(Number.isNaN).forEach(expectFalse);\n      expect(Number.isNaN(NaN)).to.equal(true);\n      expect(Number.isNaN(0 / 0)).to.equal(true);\n      expect(Number.isNaN(Number('NaN'))).to.equal(true);\n      expect(Number.isNaN(4)).to.equal(false);\n      expect(Number.isNaN(4.5)).to.equal(false);\n      expect(Number.isNaN('hi')).to.equal(false);\n      expect(Number.isNaN('1.3')).to.equal(false);\n      expect(Number.isNaN('51')).to.equal(false);\n      expect(Number.isNaN(0)).to.equal(false);\n      expect(Number.isNaN(-0)).to.equal(false);\n      expect(Number.isNaN(valueOfThree)).to.equal(false);\n      expect(Number.isNaN(valueOfNaN)).to.equal(false);\n      expect(Number.isNaN(valueOfThrows)).to.equal(false);\n      expect(Number.isNaN(toStringThrows)).to.equal(false);\n      expect(Number.isNaN(toPrimitiveThrows)).to.equal(false);\n    });\n  });\n\n  describe('constructor', function () {\n    it('behaves like the builtin', function () {\n      expect((1).constructor).to.equal(Number);\n      expect(Number()).to.equal(0);\n    });\n\n    describe('strings in the constructor', function () {\n      it('works on normal literals', function () {\n        expect(Number('1')).to.equal(+'1');\n        expect(Number('1.1')).to.equal(+'1.1');\n        expect(Number('0xA')).to.equal(0xA);\n      });\n    });\n\n    describe('when called with a receiver', function () {\n      it('returns a primitive when called with a primitive receiver', function () {\n        expect((1).constructor(2)).to.equal(2);\n        expect((1).constructor.call(null, 3)).to.equal(3);\n        expect(Object(1).constructor.call(null, 5)).to.equal(5);\n      });\n\n      it('returns a primitive when called with a different number as an object receiver', function () {\n        expect(Object(1).constructor(6)).to.equal(6);\n        expect(Object(1).constructor.call(Object(1), 7)).to.equal(7);\n      });\n\n      it('returns a primitive when called with the same number as an object receiver', function () {\n        expect(Object(1).constructor.call(Object(8), 8)).to.equal(8);\n      });\n    });\n\n    it('works with boxed primitives', function () {\n      expect(1 instanceof Number).to.equal(false);\n      expect(Object(1) instanceof Number).to.equal(true);\n    });\n\n    it('works with `new`', function () {\n      /* jshint -W053 */\n      /* eslint-disable no-new-wrappers */\n      var one = new Number('1');\n      var a = new Number('0xA');\n      /* eslint-enable no-new-wrappers */\n      /* jshint +W053 */\n\n      expect(+one).to.equal(1);\n      expect(one instanceof Number).to.equal(true);\n      expect(+a).to.equal(0xA);\n      expect(a instanceof Number).to.equal(true);\n    });\n\n    it('works with binary literals in string form', function () {\n      expect(Number('0b1')).to.equal(1);\n      expect(Number(' 0b1')).to.equal(1);\n      expect(Number('0b1 ')).to.equal(1);\n\n      expect(Number('0b10')).to.equal(2);\n      expect(Number(' 0b10')).to.equal(2);\n      expect(Number('0b10 ')).to.equal(2);\n\n      expect(Number('0b11')).to.equal(3);\n      expect(Number(' 0b11')).to.equal(3);\n      expect(Number('0b11 ')).to.equal(3);\n\n      expect(Number({\n        toString: function () { return '0b100'; },\n        valueOf: function () { return '0b101'; }\n      })).to.equal(5);\n    });\n\n    it('works with octal literals in string form', function () {\n      expect(Number('0o7')).to.equal(7);\n      expect(Number('0o10')).to.equal(8);\n      expect(Number('0o11')).to.equal(9);\n      expect(Number({\n        toString: function () { return '0o12'; },\n        valueOf: function () { return '0o13'; }\n      })).to.equal(11);\n    });\n\n    it('should produce NaN', function () {\n      expect(String(Number('0b12'))).to.equal('NaN');\n      expect(String(Number('0o18'))).to.equal('NaN');\n      expect(String(Number('0x1g'))).to.equal('NaN');\n      expect(String(Number('+0b1'))).to.equal('NaN');\n      expect(String(Number('+0o1'))).to.equal('NaN');\n      expect(String(Number('+0x1'))).to.equal('NaN');\n      expect(String(Number('-0b1'))).to.equal('NaN');\n      expect(String(Number('-0o1'))).to.equal('NaN');\n      expect(String(Number('-0x1'))).to.equal('NaN');\n    });\n\n    it('should work with well formed and poorly formed objects', function () {\n      expect(String(Number({}))).to.equal('NaN');\n      expect(String(Number({ valueOf: '1.1' }))).to.equal('NaN');\n      expect(Number({ valueOf: '1.1', toString: function () { return '2.2'; } })).to.equal(2.2);\n      expect(Number({ valueOf: function () { return '1.1'; }, toString: '2.2' })).to.equal(1.1);\n      expect(Number({ valueOf: function () { return '1.1'; }, toString: function () { return '2.2'; } })).to.equal(1.1);\n      expect(String(Number({ valueOf: function () { return '-0x1a2b3c'; } }))).to.equal('NaN');\n      expect(String(Number({ toString: function () { return '-0x1a2b3c'; } }))).to.equal('NaN');\n      expect(Number({ valueOf: function () { return '0o12345'; } })).to.equal(5349);\n      expect(Number({ toString: function () { return '0o12345'; } })).to.equal(5349);\n      expect(Number({ valueOf: function () { return '0b101010'; } })).to.equal(42);\n      expect(Number({ toString: function () { return '0b101010'; } })).to.equal(42);\n    });\n\n    it('should work with correct whitespaces', function () {\n      var whitespace = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000';\n\n      // Zero-width space (zws), next line character (nel), and non-character (bom) are not whitespace.\n      var nonWhitespaces = ['\\u0085', '\\u200b', '\\ufffe'];\n\n      expect(String(Number(nonWhitespaces[0] + '0' + nonWhitespaces[0]))).to.equal('NaN');\n      expect(String(Number(nonWhitespaces[1] + '1' + nonWhitespaces[1]))).to.equal('NaN');\n      expect(String(Number(nonWhitespaces[2] + '2' + nonWhitespaces[2]))).to.equal('NaN');\n      expect(String(Number(whitespace + '3' + whitespace))).to.equal('3');\n    });\n  });\n});\n"]}