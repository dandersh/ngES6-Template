{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/promise/race.js"],"names":[],"mappings":"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","file":"race.js","sourcesContent":["/* global describe, it, expect, setTimeout, assert, Promise */\n\nvar failIfThrows = function (done) {\n  'use strict';\n\n  return function (e) {\n    done(e || new Error());\n  };\n};\n\nvar delayPromise = function (value, ms) {\n  'use strict';\n\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve(value);\n    }, ms);\n  });\n};\n\ndescribe('Promise.race', function () {\n  'use strict';\n\n  it('should not be enumerable', function () {\n    expect(Promise).ownPropertyDescriptor('race').to.have.property('enumerable', false);\n  });\n\n  it('should fulfill if all promises are settled and the ordinally-first is fulfilled', function (done) {\n    var iterable = [Promise.resolve(1), Promise.reject(2), Promise.resolve(3)];\n\n    Promise.race(iterable).then(function (value) {\n      assert.strictEqual(value, 1);\n    }).then(done, failIfThrows(done));\n  });\n\n  it('should reject if all promises are settled and the ordinally-first is rejected', function (done) {\n    var iterable = [Promise.reject(1), Promise.reject(2), Promise.resolve(3)];\n\n    Promise.race(iterable).then(\n      function () {\n        assert(false, 'should never get here');\n      },\n      function (reason) {\n        assert.strictEqual(reason, 1);\n      }\n    ).then(done, failIfThrows(done));\n  });\n\n  it('should settle in the same way as the first promise to settle', function (done) {\n    // ensure that even if timeouts are delayed an all execute together,\n    // p2 will settle first.\n    var p2 = delayPromise(2, 200);\n    var p1 = delayPromise(1, 1000);\n    var p3 = delayPromise(3, 500);\n    var iterable = [p1, p2, p3];\n\n    Promise.race(iterable).then(function (value) {\n      assert.strictEqual(value, 2);\n    }).then(done, failIfThrows(done));\n  });\n\n  // see https://github.com/domenic/promises-unwrapping/issues/75\n  it('should never settle when given an empty iterable', function (done) {\n    var iterable = [];\n    var settled = false;\n\n    Promise.race(iterable).then(\n      function () { settled = true; },\n      function () { settled = true; }\n    );\n\n    setTimeout(function () {\n      assert.strictEqual(settled, false);\n      done();\n    }, 300);\n  });\n\n  it('should reject with a TypeError if given a non-iterable', function (done) {\n    var notIterable = {};\n\n    Promise.race(notIterable).then(\n      function () {\n        assert(false, 'should never get here');\n      },\n      function (reason) {\n        assert(reason instanceof TypeError);\n      }\n    ).then(done, failIfThrows(done));\n  });\n});\n"]}