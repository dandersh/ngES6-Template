{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/promise/reject.js"],"names":[],"mappings":";;AAAA;;AAEA,IAAI,eAAe,SAAf,YAAe,CAAU,IAAV,EAAgB;AACjC;;AAEA,SAAO,UAAU,CAAV,EAAa;AAClB,SAAK,KAAK,IAAI,KAAJ,EAAV;AACD,GAFD;AAGD,CAND;;AAQA,SAAS,gBAAT,EAA2B,YAAY;AACrC;;AAEA,KAAG,0BAAH,EAA+B,YAAY;AACzC,WAAO,OAAP,EAAgB,qBAAhB,CAAsC,QAAtC,EAAgD,EAAhD,CAAmD,IAAnD,CAAwD,QAAxD,CAAiE,YAAjE,EAA+E,KAA/E;AACD,GAFD;;AAIA,KAAG,kCAAH,EAAuC,UAAU,IAAV,EAAgB;AACrD,QAAI,QAAQ,EAAZ;AACA,YAAQ,MAAR,CAAe,KAAf,EAAsB,IAAtB,CAA2B,aAAa,IAAb,CAA3B,EAA+C,UAAU,MAAV,EAAkB;AAC/D,aAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,KAAxB;AACA;AACD,KAHD;AAID,GAND;;AAQA,KAAG,qCAAH,EAA0C,YAAY;AACpD,QAAI,UAAU,QAAQ,MAAR,EAAd;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,SAApB,EAA+B,OAA/B;AAA0C,KAA/D,EAAiE,EAAjE,CAAoE,OAApE;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,IAApB,EAA0B,OAA1B;AAAqC,KAA1D,EAA4D,EAA5D,CAA+D,OAA/D;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,EAApB,EAAwB,OAAxB;AAAmC,KAAxD,EAA0D,EAA1D,CAA6D,OAA7D;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,EAApB,EAAwB,OAAxB;AAAmC,KAAxD,EAA0D,EAA1D,CAA6D,OAA7D;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,KAApB,EAA2B,OAA3B;AAAsC,KAA3D,EAA6D,EAA7D,CAAgE,OAAhE;AACA,WAAO,YAAY;AAAE,cAAQ,MAAR,CAAe,IAAf,CAAoB,IAApB,EAA0B,OAA1B;AAAqC,KAA1D,EAA4D,EAA5D,CAA+D,OAA/D;AACA,YAAQ,IAAR,CAAa,IAAb,EAAmB,YAAY,CAAE,CAAjC,EAAoC;AACrC,GATD;AAUD,CAzBD","file":"reject.js","sourcesContent":["/* global describe, it, expect, setTimeout, Promise */\n\nvar failIfThrows = function (done) {\n  'use strict';\n\n  return function (e) {\n    done(e || new Error());\n  };\n};\n\ndescribe('Promise.reject', function () {\n  'use strict';\n\n  it('should not be enumerable', function () {\n    expect(Promise).ownPropertyDescriptor('reject').to.have.property('enumerable', false);\n  });\n\n  it('should return a rejected promise', function (done) {\n    var value = {};\n    Promise.reject(value).then(failIfThrows(done), function (result) {\n      expect(result).to.equal(value);\n      done();\n    });\n  });\n\n  it('throws when receiver is a primitive', function () {\n    var promise = Promise.reject();\n    expect(function () { Promise.reject.call(undefined, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(null, promise); }).to['throw']();\n    expect(function () { Promise.reject.call('', promise); }).to['throw']();\n    expect(function () { Promise.reject.call(42, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(false, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(true, promise); }).to['throw']();\n    promise.then(null, function () {}); // silence unhandled rejection errors in Chrome\n  });\n});\n"]}