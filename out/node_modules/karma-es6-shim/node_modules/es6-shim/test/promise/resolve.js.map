{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/promise/resolve.js"],"names":[],"mappings":";;AAAA;;AAEA,IAAI,eAAe,SAAf,YAAe,CAAU,IAAV,EAAgB;AACjC;;AAEA,SAAO,UAAU,CAAV,EAAa;AAClB,SAAK,KAAK,IAAI,KAAJ,EAAV;AACD,GAFD;AAGD,CAND;;AAQA,SAAS,iBAAT,EAA4B,YAAY;AACtC;;AAEA,KAAG,0BAAH,EAA+B,YAAY;AACzC,WAAO,OAAP,EAAgB,qBAAhB,CAAsC,SAAtC,EAAiD,EAAjD,CAAoD,IAApD,CAAyD,QAAzD,CAAkE,YAAlE,EAAgF,KAAhF;AACD,GAFD;;AAIA,KAAG,kCAAH,EAAuC,UAAU,IAAV,EAAgB;AACrD,QAAI,QAAQ,EAAZ;AACA,YAAQ,OAAR,CAAgB,KAAhB,EAAuB,IAAvB,CAA4B,UAAU,MAAV,EAAkB;AAC5C,aAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,KAAxB;AACA;AACD,KAHD,EAGG,aAAa,IAAb,CAHH;AAID,GAND;;AAQA,KAAG,qCAAH,EAA0C,YAAY;AACpD,QAAI,UAAU,QAAQ,OAAR,EAAd;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,SAArB,EAAgC,OAAhC;AAA2C,KAAhE,EAAkE,EAAlE,CAAqE,OAArE;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,OAA3B;AAAsC,KAA3D,EAA6D,EAA7D,CAAgE,OAAhE;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,EAArB,EAAyB,OAAzB;AAAoC,KAAzD,EAA2D,EAA3D,CAA8D,OAA9D;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,EAArB,EAAyB,OAAzB;AAAoC,KAAzD,EAA2D,EAA3D,CAA8D,OAA9D;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,KAArB,EAA4B,OAA5B;AAAuC,KAA5D,EAA8D,EAA9D,CAAiE,OAAjE;AACA,WAAO,YAAY;AAAE,cAAQ,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,OAA3B;AAAsC,KAA3D,EAA6D,EAA7D,CAAgE,OAAhE;AACD,GARD;AASD,CAxBD","file":"resolve.js","sourcesContent":["/* global describe, it, expect, setTimeout, Promise */\n\nvar failIfThrows = function (done) {\n  'use strict';\n\n  return function (e) {\n    done(e || new Error());\n  };\n};\n\ndescribe('Promise.resolve', function () {\n  'use strict';\n\n  it('should not be enumerable', function () {\n    expect(Promise).ownPropertyDescriptor('resolve').to.have.property('enumerable', false);\n  });\n\n  it('should return a resolved promise', function (done) {\n    var value = {};\n    Promise.resolve(value).then(function (result) {\n      expect(result).to.equal(value);\n      done();\n    }, failIfThrows(done));\n  });\n\n  it('throws when receiver is a primitive', function () {\n    var promise = Promise.resolve();\n    expect(function () { Promise.resolve.call(undefined, promise); }).to['throw']();\n    expect(function () { Promise.resolve.call(null, promise); }).to['throw']();\n    expect(function () { Promise.resolve.call('', promise); }).to['throw']();\n    expect(function () { Promise.resolve.call(42, promise); }).to['throw']();\n    expect(function () { Promise.resolve.call(false, promise); }).to['throw']();\n    expect(function () { Promise.resolve.call(true, promise); }).to['throw']();\n  });\n});\n"]}