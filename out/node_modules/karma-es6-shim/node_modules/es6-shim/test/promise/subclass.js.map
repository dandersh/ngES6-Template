{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es6-shim/test/promise/subclass.js"],"names":[],"mappings":";;AAAA;;AAEA,SAAS,qCAAT,EAAgD,YAAY;AAC1D;;AAEA,KAAG,gCAAH,EAAqC,UAAU,IAAV,EAAgB;AACnD;AACA;AACA,QAAI,YAAY,SAAZ,SAAY,CAAU,QAAV,EAAoB;AAClC,UAAI,OAAO,IAAI,OAAJ,CAAY,QAAZ,CAAX;AACA,aAAO,cAAP,CAAsB,IAAtB,EAA4B,UAAU,SAAtC;AACA,WAAK,IAAL,GAAY,MAAZ;AACA,aAAO,IAAP;AACD,KALD;AAMA,QAAI,CAAC,OAAO,cAAZ,EAA4B;AAAE,aAAO,MAAP;AAAgB,KAAC;AAC/C,WAAO,cAAP,CAAsB,SAAtB,EAAiC,OAAjC;AACA,cAAU,SAAV,GAAsB,OAAO,MAAP,CAAc,QAAQ,SAAtB,EAAiC;AACrD,mBAAa,EAAE,OAAO,SAAT;AADwC,KAAjC,CAAtB;;AAIA;AACA,QAAI,KAAK,UAAU,OAAV,CAAkB,CAAlB,CAAT;AACA,WAAO,WAAP,CAAmB,GAAG,IAAtB,EAA4B,MAA5B;AACA,SAAK,GAAG,IAAH,CAAQ,UAAU,CAAV,EAAa;AACxB,aAAO,WAAP,CAAmB,CAAnB,EAAsB,CAAtB;AACD,KAFI,CAAL;AAGA,WAAO,WAAP,CAAmB,GAAG,IAAtB,EAA4B,MAA5B;;AAEA,QAAI,KAAK,IAAI,SAAJ,CAAc,UAAU,CAAV,EAAa;AAAE,QAAE,CAAF;AAAO,KAApC,CAAT;AACA,WAAO,WAAP,CAAmB,GAAG,IAAtB,EAA4B,MAA5B;AACA,SAAK,GAAG,IAAH,CAAQ,UAAU,CAAV,EAAa;AACxB,aAAO,WAAP,CAAmB,CAAnB,EAAsB,CAAtB;AACD,KAFI,CAAL;AAGA,WAAO,WAAP,CAAmB,GAAG,IAAtB,EAA4B,MAA5B;;AAEA,QAAI,KAAK,UAAU,GAAV,CAAc,CAAC,EAAD,EAAK,EAAL,CAAd,CAAT;AACA,WAAO,WAAP,CAAmB,GAAG,IAAtB,EAA4B,MAA5B;AACA,OAAG,IAAH,CAAQ,YAAY;AAAE;AAAS,KAA/B,EAAiC,IAAjC;AACD,GAjCD;;AAmCA,KAAG,0CAAH,EAA+C,YAAY;AACzD,QAAI,YAAY,SAAZ,SAAY,GAAY,CAAE,CAA9B;AACA,WAAO,QAAP,EAAiB,YAAY;AAC3B,cAAQ,GAAR,CAAY,IAAZ,CAAiB,SAAjB,EAA4B,EAA5B;AACD,KAFD,EAEG,SAFH;AAGD,GALD;AAMD,CA5CD","file":"subclass.js","sourcesContent":["/* global it, describe, assert, Promise */\n\ndescribe('Support user subclassing of Promise', function () {\n  'use strict';\n\n  it('should work if you do it right', function (done) {\n    // This is the \"correct\" es6-compatible way.\n    // (Thanks, @domenic and @zloirock!)\n    var MyPromise = function (executor) {\n      var self = new Promise(executor);\n      Object.setPrototypeOf(self, MyPromise.prototype);\n      self.mine = 'yeah';\n      return self;\n    };\n    if (!Object.setPrototypeOf) { return done(); } // skip test if on IE < 11\n    Object.setPrototypeOf(MyPromise, Promise);\n    MyPromise.prototype = Object.create(Promise.prototype, {\n      constructor: { value: MyPromise }\n    });\n\n    // let's try it!\n    var p1 = MyPromise.resolve(5);\n    assert.strictEqual(p1.mine, 'yeah');\n    p1 = p1.then(function (x) {\n      assert.strictEqual(x, 5);\n    });\n    assert.strictEqual(p1.mine, 'yeah');\n\n    var p2 = new MyPromise(function (r) { r(6); });\n    assert.strictEqual(p2.mine, 'yeah');\n    p2 = p2.then(function (x) {\n      assert.strictEqual(x, 6);\n    });\n    assert.strictEqual(p2.mine, 'yeah');\n\n    var p3 = MyPromise.all([p1, p2]);\n    assert.strictEqual(p3.mine, 'yeah');\n    p3.then(function () { done(); }, done);\n  });\n\n  it(\"should throw if you don't inherit at all\", function () {\n    var MyPromise = function () {};\n    assert['throws'](function () {\n      Promise.all.call(MyPromise, []);\n    }, TypeError);\n  });\n});\n"]}