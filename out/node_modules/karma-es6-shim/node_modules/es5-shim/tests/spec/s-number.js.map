{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es5-shim/tests/spec/s-number.js"],"names":[],"mappings":";;AAAA;;AAEA,SAAS,QAAT,EAAmB,YAAY;AAC3B;;AAEA,aAAS,YAAT,EAAuB,YAAY;AAC/B,WAAG,kCAAH,EAAuC,YAAY;AAC/C,mBAAQ,OAAD,CAAU,OAAV,CAAkB,CAAlB,CAAP,EAA6B,IAA7B,CAAkC,OAAlC;AACA,mBAAQ,GAAD,CAAM,OAAN,CAAc,CAAd,CAAP,EAAyB,IAAzB,CAA8B,GAA9B;AACA,mBAAQ,KAAD,CAAQ,OAAR,CAAgB,CAAhB,CAAP,EAA2B,IAA3B,CAAgC,MAAhC;AACA,mBAAQ,kBAAD,CAAqB,OAArB,CAA6B,CAA7B,CAAP,EAAwC,IAAxC,CAA6C,kBAA7C;AACA,mBAAQ,mBAAD,EAAsB,OAAtB,CAA8B,CAA9B,CAAP,EAAyC,IAAzC,CAA8C,qBAA9C;AACH,SAND;AAOH,KARD;;AAUA,aAAS,gBAAT,EAA2B,YAAY;AACnC;AACA,WAAG,sCAAH,EAA2C,YAAY;AACnD,mBAAO,YAAY;AAAE,uBAAQ,GAAD,CAAM,WAAN,CAAkB,CAAlB,CAAP;AAA8B,aAAnD,EAAqD,OAArD;AACA;AACA,mBAAO,YAAY;AAAE,uBAAQ,GAAD,CAAM,WAAN,CAAkB,GAAlB,CAAP;AAAgC,aAArD,EAAuD,OAAvD;AACH,SAJD;;AAMA,WAAG,mBAAH,EAAwB,YAAY;AAChC,mBAAQ,OAAD,CAAU,WAAV,CAAsB,CAAtB,CAAP,EAAiC,IAAjC,CAAsC,WAAtC;AACA,mBAAQ,KAAD,CAAQ,WAAR,CAAoB,CAApB,CAAP,EAA+B,IAA/B,CAAoC,KAApC;AACA,mBAAQ,kBAAD,CAAqB,WAArB,CAAiC,EAAjC,CAAP,EAA6C,IAA7C,CAAkD,gBAAlD;AACA,mBAAO,IAAI,WAAJ,CAAgB,CAAhB,CAAP,EAA2B,IAA3B,CAAgC,KAAhC;AACH,SALD;;AAOA,WAAG,mCAAH,EAAwC,YAAY;AAChD,gBAAI,MAAM,OAAV;AACA,mBAAO,IAAI,WAAJ,EAAP,EAA0B,IAA1B,CAA+B,OAAO,GAAP,CAA/B;AACA,mBAAO,IAAI,WAAJ,CAAgB,SAAhB,CAAP,EAAmC,IAAnC,CAAwC,OAAO,GAAP,CAAxC;AACH,SAJD;AAKH,KApBD;;AAsBA,aAAS,WAAT,EAAsB,YAAY;AAC9B,WAAG,uBAAH,EAA4B,YAAY;AACpC,mBAAO,OAAO,SAAd,EAAyB,IAAzB,CAA8B,sBAA9B;AACH,SAFD;;AAIA,WAAG,uBAAH,EAA4B,YAAY;AACpC,mBAAO,OAAO,SAAd,EAAyB,IAAzB,CAA8B,MAA9B;AACH,SAFD;;AAIA,WAAG,iBAAH,EAAsB,YAAY;AAC9B,mBAAO,OAAO,GAAd,EAAmB,GAAnB,CAAuB,IAAvB,CAA4B,OAAO,GAAnC;AACH,SAFD;;AAIA,WAAG,+BAAH,EAAoC,YAAY;AAC5C,mBAAO,OAAO,iBAAd,EAAiC,IAAjC,CAAsC,QAAtC;AACH,SAFD;;AAIA,WAAG,+BAAH,EAAoC,YAAY;AAC5C,mBAAO,OAAO,iBAAd,EAAiC,IAAjC,CAAsC,CAAC,QAAvC;AACH,SAFD;AAGH,KApBD;AAqBH,CAxDD","file":"s-number.js","sourcesContent":["/* global describe, it, expect */\n\ndescribe('Number', function () {\n    'use strict';\n\n    describe('#toFixed()', function () {\n        it('should convert numbers correctly', function () {\n            expect((0.00008).toFixed(3)).toBe('0.000');\n            expect((0.9).toFixed(0)).toBe('1');\n            expect((1.255).toFixed(2)).toBe('1.25');\n            expect((1843654265.0774949).toFixed(5)).toBe('1843654265.07749');\n            expect((1000000000000000128).toFixed(0)).toBe('1000000000000000128');\n        });\n    });\n\n    describe('#toPrecision()', function () {\n        // the spec allows for this test to fail.\n        it('throws a RangeError when < 1 or > 21', function () {\n            expect(function () { return (0.9).toPrecision(0); }).toThrow();\n            // Firefox allows values up to 100\n            expect(function () { return (0.9).toPrecision(101); }).toThrow();\n        });\n\n        it('works as expected', function () {\n            expect((0.00008).toPrecision(3)).toBe('0.0000800');\n            expect((1.255).toPrecision(2)).toBe('1.3');\n            expect((1843654265.0774949).toPrecision(13)).toBe('1843654265.077');\n            expect(NaN.toPrecision(1)).toBe('NaN');\n        });\n\n        it('works with an undefined precision', function () {\n            var num = 123.456;\n            expect(num.toPrecision()).toBe(String(num));\n            expect(num.toPrecision(undefined)).toBe(String(num));\n        });\n    });\n\n    describe('constants', function () {\n        it('should have MAX_VALUE', function () {\n            expect(Number.MAX_VALUE).toBe(1.7976931348623157e308);\n        });\n\n        it('should have MIN_VALUE', function () {\n            expect(Number.MIN_VALUE).toBe(5e-324);\n        });\n\n        it('should have NaN', function () {\n            expect(Number.NaN).not.toBe(Number.NaN);\n        });\n\n        it('should have POSITIVE_INFINITY', function () {\n            expect(Number.POSITIVE_INFINITY).toBe(Infinity);\n        });\n\n        it('should have NEGATIVE_INFINITY', function () {\n            expect(Number.NEGATIVE_INFINITY).toBe(-Infinity);\n        });\n    });\n});\n"]}