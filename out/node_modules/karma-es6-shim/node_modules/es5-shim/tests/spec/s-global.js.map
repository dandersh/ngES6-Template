{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es5-shim/tests/spec/s-global.js"],"names":[],"mappings":"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","file":"s-global.js","sourcesContent":["/* global describe, it, xit, expect */\n\ndescribe('global methods', function () {\n    'use strict';\n\n    var foo = function foo() {};\n    var functionsHaveNames = foo.name === 'foo';\n    var ifFunctionsHaveNamesIt = functionsHaveNames ? it : xit;\n\n    var is = function (x, y) {\n        if (x === 0 && y === 0) {\n            return 1 / x === 1 / y;\n        }\n        return x === y;\n    };\n\n    describe('parseInt', function () {\n        /* eslint-disable radix */\n\n        ifFunctionsHaveNamesIt('has the right name', function () {\n            expect(parseInt.name).toBe('parseInt');\n        });\n\n        it('accepts a radix', function () {\n            for (var i = 2; i <= 36; ++i) {\n                expect(parseInt('10', i)).toBe(i);\n            }\n        });\n\n        it('defaults the radix to 10 when the number does not start with 0x or 0X', function () {\n            [\n                '01',\n                '08',\n                '10',\n                '42'\n            ].forEach(function (str) {\n                expect(parseInt(str)).toBe(parseInt(str, 10));\n            });\n        });\n\n        it('defaults the radix to 16 when the number starts with 0x or 0X', function () {\n            expect(parseInt('0x16')).toBe(parseInt('0x16', 16));\n            expect(parseInt('0X16')).toBe(parseInt('0X16', 16));\n        });\n\n        it('ignores leading whitespace', function () {\n            expect(parseInt('  0x16')).toBe(parseInt('0x16', 16));\n            expect(parseInt('  42')).toBe(parseInt('42', 10));\n            expect(parseInt('  08')).toBe(parseInt('08', 10));\n\n            var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n                '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n                '\\u2029\\uFEFF';\n            expect(parseInt(ws + '08')).toBe(parseInt('08', 10));\n            expect(parseInt(ws + '0x16')).toBe(parseInt('0x16', 16));\n        });\n\n        it('defaults the radix properly when not a true number', function () {\n            var fakeZero = { valueOf: function () { return 0; } };\n            expect(parseInt('08', fakeZero)).toBe(parseInt('08', 10));\n            expect(parseInt('0x16', fakeZero)).toBe(parseInt('0x16', 16));\n        });\n\n        it('allows sign-prefixed hex values', function () {\n            expect(parseInt('-0xF')).toBe(-15);\n            expect(parseInt('-0xF', 16)).toBe(-15);\n            expect(parseInt('+0xF')).toBe(15);\n            expect(parseInt('+0xF', 16)).toBe(15);\n        });\n\n        it('NaN parsing', function () {\n            expect(parseInt(undefined)).toBeNaN();\n            expect(parseInt(null)).toBeNaN();\n            expect(parseInt(NaN)).toBeNaN();\n        });\n        /* eslint-enable radix */\n    });\n\n    describe('parseFloat()', function () {\n        it('works with zeroes', function () {\n            expect(is(parseFloat('0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat(' 0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat('+0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat(' +0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat('-0'), -0) ? '-0' : '+0').toBe('-0');\n            expect(is(parseFloat(' -0'), -0) ? '-0' : '+0').toBe('-0');\n        });\n\n        it('NaN parsing', function () {\n            expect(parseFloat(undefined)).toBeNaN();\n            expect(parseFloat(null)).toBeNaN();\n            expect(parseFloat(NaN)).toBeNaN();\n        });\n    });\n});\n"]}