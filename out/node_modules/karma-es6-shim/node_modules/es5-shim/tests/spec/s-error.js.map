{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es5-shim/tests/spec/s-error.js"],"names":[],"mappings":";;AAAA;;AAEA,SAAS,OAAT,EAAkB,YAAY;AAC1B;;AAEA,QAAI,sBAAsB,OAAO,cAAP,IAA0B,YAAY;AAC5D,YAAI;AACA,gBAAI,MAAM,EAAV;AACA,mBAAO,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,EAAE,YAAY,KAAd,EAAqB,OAAO,GAA5B,EAAhC;AACA,iBAAK,IAAI,CAAT,IAAc,GAAd,EAAmB;AAAE,uBAAO,KAAP;AAAe,aAAC;AACrC,mBAAO,IAAI,CAAJ,KAAU,GAAjB;AACH,SALD,CAKE,OAAO,CAAP,EAAU;AAAE;AACV,mBAAO,KAAP;AACH;AACJ,KATmD,EAApD;AAUA,QAAI,0BAA0B,sBAAsB,EAAtB,GAA2B,GAAzD;;AAEA,aAAS,aAAT,EAAwB,YAAY;AAChC,WAAG,oCAAH,EAAyC,YAAY;AACjD,gBAAI,MAAM,MAAV;AACA,gBAAI,QAAQ,IAAI,UAAJ,CAAe,GAAf,CAAZ;AACA,mBAAO,MAAM,IAAb,EAAmB,IAAnB,CAAwB,YAAxB;AACA,mBAAO,MAAM,OAAb,EAAsB,IAAtB,CAA2B,GAA3B;AACA,mBAAO,OAAO,KAAP,CAAP,EAAsB,IAAtB,CAA2B,MAAM,IAAN,GAAa,IAAb,GAAoB,GAA/C;AACH,SAND;;AAQA,WAAG,qCAAH,EAA0C,YAAY;AAClD,gBAAI,MAAM,MAAV;AACA,gBAAI,KAAJ;AACA,gBAAI;AACA,sBAAM,IAAI,UAAJ,CAAe,GAAf,CAAN;AACH,aAFD,CAEE,OAAO,CAAP,EAAU;AACR,wBAAQ,CAAR;AACH;AACD,mBAAO,MAAM,IAAb,EAAmB,IAAnB,CAAwB,YAAxB;AACA,mBAAO,MAAM,OAAb,EAAsB,IAAtB,CAA2B,GAA3B;AACA,mBAAO,OAAO,KAAP,CAAP,EAAsB,IAAtB,CAA2B,MAAM,IAAN,GAAa,IAAb,GAAoB,GAA/C;AACH,SAXD;AAYH,KArBD;;AAuBA,aAAS,uCAAT,EAAkD,YAAY;AAC1D,gCAAwB,UAAxB,EAAoC,YAAY;AAC5C,mBAAO,OAAO,SAAP,CAAiB,oBAAjB,CAAsC,IAAtC,CAA2C,MAAM,SAAjD,EAA4D,SAA5D,CAAP,EAA+E,IAA/E,CAAoF,KAApF;AACH,SAFD;;AAIA,gCAAwB,OAAxB,EAAiC,YAAY;AACzC,mBAAO,OAAO,SAAP,CAAiB,oBAAjB,CAAsC,IAAtC,CAA2C,MAAM,SAAjD,EAA4D,MAA5D,CAAP,EAA4E,IAA5E,CAAiF,KAAjF;AACH,SAFD;AAGH,KARD;AASH,CA/CD","file":"s-error.js","sourcesContent":["/* global describe, it, xit, expect */\n\ndescribe('Error', function () {\n    'use strict';\n\n    var supportsDescriptors = Object.defineProperty && (function () {\n        try {\n            var obj = {};\n            Object.defineProperty(obj, 'x', { enumerable: false, value: obj });\n            for (var _ in obj) { return false; } // jscs:ignore disallowUnusedVariables\n            return obj.x === obj;\n        } catch (e) { /* this is ES3 */\n            return false;\n        }\n    }());\n    var ifSupportsDescriptorsIt = supportsDescriptors ? it : xit;\n\n    describe('#toString()', function () {\n        it('stringifies a newed error properly', function () {\n            var msg = 'test';\n            var error = new RangeError(msg);\n            expect(error.name).toBe('RangeError');\n            expect(error.message).toBe(msg);\n            expect(String(error)).toBe(error.name + ': ' + msg);\n        });\n\n        it('stringifies a thrown error properly', function () {\n            var msg = 'test';\n            var error;\n            try {\n                throw new RangeError(msg);\n            } catch (e) {\n                error = e;\n            }\n            expect(error.name).toBe('RangeError');\n            expect(error.message).toBe(msg);\n            expect(String(error)).toBe(error.name + ': ' + msg);\n        });\n    });\n\n    describe('enumerability of prototype properties', function () {\n        ifSupportsDescriptorsIt('#message', function () {\n            expect(Object.prototype.propertyIsEnumerable.call(Error.prototype, 'message')).toBe(false);\n        });\n\n        ifSupportsDescriptorsIt('#name', function () {\n            expect(Object.prototype.propertyIsEnumerable.call(Error.prototype, 'name')).toBe(false);\n        });\n    });\n});\n"]}