{"version":3,"sources":["../../../../../../../node_modules/karma-es6-shim/node_modules/es5-shim/tests/spec/s-date.js"],"names":[],"mappings":"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","file":"s-date.js","sourcesContent":["/* global describe, it, xit, expect, beforeEach, jasmine */\n\ndescribe('Date', function () {\n    'use strict';\n\n    var supportsDescriptors = Object.defineProperty && (function () {\n        try {\n            var obj = {};\n            Object.defineProperty(obj, 'x', {\n                enumerable: false,\n                value: obj\n            });\n            for (var _ in obj) { // jscs:ignore disallowUnusedVariables\n                return false;\n            }\n            return obj.x === obj;\n        } catch (e) { /* this is ES3 */\n            return false;\n        }\n    }());\n    var ifSupportsDescriptorsIt = supportsDescriptors ? it : xit;\n    var has = Object.prototype.hasOwnProperty;\n\n    var negativeDate;\n    beforeEach(function () {\n        var negativeCanned = [\n            {\n                getTime: -3509827329600292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 31\n            },\n            {\n                getTime: -3509824651200292,\n                getUTCDay: 0,\n                getDay: 0,\n                dim: 29\n            },\n            {\n                getTime: -3509822145600292,\n                getUTCDay: 1,\n                getDay: 1,\n                dim: 31\n            },\n            {\n                getTime: -3509819467200292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 30\n            },\n            {\n                getTime: -3509816875200292,\n                getUTCDay: 6,\n                getDay: 6,\n                dim: 31\n            },\n            {\n                getTime: -3509814196800292,\n                getUTCDay: 2,\n                getDay: 2,\n                dim: 30\n            },\n            {\n                getTime: -3509811604800292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 31\n            },\n            {\n                getTime: -3509808926400292,\n                getUTCDay: 0,\n                getDay: 0,\n                dim: 31\n            },\n            {\n                getTime: -3509806248000292,\n                getUTCDay: 3,\n                getDay: 3,\n                dim: 30\n            },\n            {\n                getTime: -3509803656000292,\n                getUTCDay: 5,\n                getDay: 5,\n                dim: 31\n            },\n            {\n                getTime: -3509800977600292,\n                getUTCDay: 1,\n                getDay: 1,\n                dim: 30\n            },\n            {\n                getTime: -3509798385600292,\n                getUTCDay: 3,\n                getDay: 3,\n                dim: 31\n            }\n        ];\n        negativeDate = negativeCanned.map(function (item) {\n            var dateFirst = new Date(item.getTime);\n            var dateLast = new Date(item.getTime + ((item.dim - 1) * 86400000));\n            return {\n                dates: [dateFirst, dateLast],\n                days: [1, item.dim],\n                getUTCDay: [item.getUTCDay, (item.getUTCDay + item.dim - 1) % 7],\n                getDay: [item.getDay, (item.getDay + item.dim - 1) % 7]\n            };\n        });\n    });\n\n    describe('.now()', function () {\n        it('should be the current time', function () {\n            var before = (new Date()).getTime();\n            var middle = Date.now();\n            var after = (new Date()).getTime();\n            expect(middle).not.toBeLessThan(before);\n            expect(middle).not.toBeGreaterThan(after);\n        });\n    });\n\n    describe('constructor', function () {\n        it('works with standard formats', function () {\n            //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(+new Date('2012-12-31T23:59:59.000Z')).toBe(1356998399000); //    1356998399000 1356998399000 1356998399000 1356998399000 1356998399000\n            expect(+new Date('2012-04-04T05:02:02.170Z')).toBe(1333515722170); //    1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.170999Z')).toBe(1333515722170); // 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.17Z')).toBe(1333515722170); //     1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.1Z')).toBe(1333515722100); //      1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T24:00:00.000Z')).toBe(1333584000000); //    NaN           1333584000000 1333584000000 1333584000000 1333584000000\n            expect(+new Date('2012-02-29T12:00:00.000Z')).toBe(1330516800000); //    1330516800000 1330516800000 1330516800000 1330516800000 1330516800000\n            expect(+new Date('2011-03-01T12:00:00.000Z')).toBe(1298980800000); //    1298980800000 1298980800000 1298980800000 1298980800000 1298980800000\n\n            // https://github.com/es-shims/es5-shim/issues/80 Safari bug with leap day\n            expect(new Date('2034-03-01T00:00:00.000Z') -\n                new Date('2034-02-27T23:59:59.999Z')).toBe(86400001); //          86400001      86400001      86400001      86400001             1\n\n        });\n\n        ifSupportsDescriptorsIt('is not enumerable', function () {\n            expect(Object.keys(new Date())).not.toContain('constructor');\n        });\n\n        it('works as a function', function () {\n            var zeroDate = Date(0);\n            expect(zeroDate).toBe(String(zeroDate));\n            var value = Date(1441705534578);\n            expect(value).toBe(String(value));\n        });\n\n        it('fixes this Safari 8/9 bug', function () {\n            var offset = new Date(1970).getTimezoneOffset() * 60e3;\n\n            var timestamp = 2147483647; // Math.pow(2, 31) - 1\n            var date = new Date(1970, 0, 1, 0, 0, 0, timestamp);\n            var expectedTimestamp = timestamp + offset;\n            expect(date.getTime()).toBe(expectedTimestamp);\n\n            var brokenTimestamp = 2147483648; // Math.pow(2, 31)\n            var brokenDate = new Date(1970, 0, 1, 0, 0, 0, brokenTimestamp);\n            var expectedBrokenTimestamp = brokenTimestamp + offset;\n            expect(brokenDate.getTime()).toBe(expectedBrokenTimestamp); // NaN in Safari 8/9\n\n            var veryBrokenTS = 1435734000000;\n            var veryBrokenDate = new Date(1970, 0, 1, 0, 0, 0, veryBrokenTS);\n            var largeDate = new Date('Wed Jul 01 2015 07:00:00 GMT-0700 (PDT)');\n            var expectedVeryBrokenTS = veryBrokenTS + (largeDate.getTimezoneOffset() * 60e3);\n            expect(veryBrokenDate.getTime()).toBe(expectedVeryBrokenTS); // NaN in Safari 8/9\n        });\n\n        it('works with a Date object', function () {\n            var date = new Date(1456297712984);\n            var copiedDate = new Date(date);\n            expect(date).not.toBe(copiedDate);\n            expect(copiedDate.getTime()).toBe(date.getTime());\n            expect(+copiedDate).toBe(+date);\n            expect(String(copiedDate)).toBe(String(date));\n        });\n    });\n\n    describe('.parse()', function () {\n        // TODO: Write the rest of the test.\n\n        ifSupportsDescriptorsIt('is not enumerable', function () {\n            expect(Object.getOwnPropertyDescriptor(Date, 'parse').enumerable).toBe(false);\n        });\n\n        it('should be an invalid date', function () {\n            //            Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(Date.parse('2012-11-31T23:59:59.000Z')).toBeFalsy(); //            1354406399000 NaN           NaN           1354406399000 NaN\n            expect(Date.parse('2012-12-31T23:59:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356998400000\n            expect(Date.parse('2012-04-04T24:00:00.500Z')).toBeFalsy(); //            NaN           NaN           1333584000500 1333584000500 NaN\n            expect(Date.parse('2012-12-31T10:08:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356948540000\n            expect(Date.parse('2012-13-01T12:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-32T12:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T25:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T24:01:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           1356998460000 NaN\n            expect(Date.parse('2012-12-31T12:60:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T12:00:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356955260000\n            expect(Date.parse('2012-00-31T23:59:59.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-00T23:59:59.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2011-02-29T12:00:00.000Z')).toBeFalsy(); //            1298980800000 NaN           NaN           1298980800000 NaN\n        });\n\n        it('should work', function () {\n            var dates = {\n                //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1  Safari 8\n                '2012-12-31T23:59:59.000Z': 1356998399000, //    1356998399000 1356998399000 1356998399000 1356998399000 1356998399000 1356998399000\n                '2012-04-04T05:02:02.170Z': 1333515722170, //    1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T05:02:02.170999Z': 1333515722170, // 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170.999\n                '2012-04-04T05:02:02.17Z': 1333515722170, //     1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T05:02:02.1Z': 1333515722100, //      1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T24:00:00.000Z': 1333584000000, //    NaN           1333584000000 1333584000000 1333584000000 1333584000000 1333584000000\n                '2012-02-29T12:00:00.000Z': 1330516800000, //    1330516800000 1330516800000 1330516800000 1330516800000 1330516800000 1330516800000\n                '2011-03-01T12:00:00.000Z': 1298980800000 //     1298980800000 1298980800000 1298980800000 1298980800000 1298980800000 1298980800000\n            };\n            for (var str in dates) {\n                if (has.call(dates, str)) {\n                    expect(Math.floor(Date.parse(str))).toBe(dates[str]);\n                }\n            }\n\n            // https://github.com/es-shims/es5-shim/issues/80 Safari bug with leap day\n            expect(Date.parse('2034-03-01T00:00:00.000Z') -\n                Date.parse('2034-02-27T23:59:59.999Z')).toBe(86400001); //         86400001      86400001      86400001      86400001             1\n\n        });\n\n        it('fixes a Safari 8/9 bug with parsing in UTC instead of local time', function () {\n            var offset = new Date('2015-07-01').getTimezoneOffset() * 60e3;\n            expect(Date.parse('2015-07-01T00:00:00')).toBe(1435708800000 + offset); // Safari 8/9 give NaN\n        });\n\n        it('should support extended years', function () {\n            //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(Date.parse('0000-01-01T00:00:00.000Z')).toBe(-621672192e5); //   -621672192e5  -621672192e5  -621672192e5  -621672192e5  -621672192e5\n            expect(Date.parse('0001-01-01T00:00:00Z')).toBe(-621355968e5); //       -621355968e5  -621355968e5  -621355968e5   8.64e15      -621355968e5\n            expect(Date.parse('+275760-09-13T00:00:00.000Z')).toBe(8.64e15); //      8.64e15       NaN           8.64e15       8.64e15       8.64e15\n            expect(Date.parse('-271821-04-20T00:00:00.000Z')).toBe(-8.64e15); //    -8.64e15       NaN          -8.64e15      -8.64e15      -8.6400000864e15\n            expect(Date.parse('+275760-09-13T00:00:00.001Z')).toBeFalsy(); //        NaN           NaN           NaN           8.64e15 + 1   8.64e15 + 1\n            expect(Date.parse('-271821-04-19T23:59:59.999Z')).toBeFalsy(); //        NaN           NaN           NaN          -8.64e15 - 1  -8.6400000864e15 - 1\n            expect(Date.parse('+033658-09-27T01:46:40.000Z')).toBe(1e15); //         1e15          NaN           1e15          1e15          9999999136e5\n            expect(Date.parse('-000001-01-01T00:00:00Z')).toBe(-621987552e5); //    -621987552e5   NaN          -621987552e5  -621987552e5  -621987552e5\n            expect(Date.parse('+002009-12-15T00:00:00Z')).toBe(12608352e5); //       12608352e5    NaN           12608352e5    12608352e5    12608352e5\n        });\n\n        it('works with timezone offsets', function () {\n            //  Chrome 19   Opera 12     Firefox 11   IE 9             Safari 5.1.1\n            expect(Date.parse('2012-01-29T12:00:00.000+01:00')).toBe(132783480e4); //  132783480e4 132783480e4  132783480e4  132783480e4      132783480e4\n            expect(Date.parse('2012-01-29T12:00:00.000-00:00')).toBe(132783840e4); //  132783840e4 132783840e4  132783840e4  132783840e4      132783840e4\n            expect(Date.parse('2012-01-29T12:00:00.000+00:00')).toBe(132783840e4); //  132783840e4 132783840e4  132783840e4  132783840e4      132783840e4\n            expect(Date.parse('2012-01-29T12:00:00.000+23:59')).toBe(132775206e4); //  132775206e4 132775206e4  132775206e4  132775206e4      132775206e4\n            expect(Date.parse('2012-01-29T12:00:00.000-23:59')).toBe(132792474e4); //  132792474e4 132792474e4  132792474e4  132792474e4      132792474e4\n            expect(Date.parse('2012-01-29T12:00:00.000+24:00')).toBeFalsy(); //        NaN         1327752e6    NaN          1327752000000    1327752000000\n            expect(Date.parse('2012-01-29T12:00:00.000+24:01')).toBeFalsy(); //        NaN         NaN          NaN          1327751940000    1327751940000\n            expect(Date.parse('2012-01-29T12:00:00.000+24:59')).toBeFalsy(); //        NaN         NaN          NaN          1327748460000    1327748460000\n            expect(Date.parse('2012-01-29T12:00:00.000+25:00')).toBeFalsy(); //        NaN         NaN          NaN          NaN              NaN\n            expect(Date.parse('2012-01-29T12:00:00.000+00:60')).toBeFalsy(); //        NaN         NaN          NaN          NaN              NaN\n            expect(Date.parse('-271821-04-20T00:00:00.000+00:01')).toBeFalsy(); //     NaN         NaN          NaN         -864000000006e4 -864000008646e4\n            expect(Date.parse('-271821-04-20T00:01:00.000+00:01')).toBe(-8.64e15); // -8.64e15     NaN         -8.64e15     -8.64e15        -864000008640e4\n\n            // When time zone is missed, local offset should be used (ES 5.1 bug)\n            // see https://bugs.ecmascript.org/show_bug.cgi?id=112\n            var tzOffset = Number(new Date(1970, 0));\n            // same as (new Date().getTimezoneOffset() * 60000)\n            expect(Date.parse('1970-01-01T00:00:00')).toBe(tzOffset); //              tzOffset    0            0            0               NaN\n        });\n\n        it('should be able to coerce to a number', function () {\n            var actual = Number(new Date(1970, 0));\n            var expected = parseInt(actual, 10);\n            expect(actual).toBeDefined();\n            expect(actual).toBe(expected);\n            expect(isNaN(actual)).toBeFalsy();\n        });\n\n    });\n\n    describe('#toString()', function () {\n        var actual;\n\n        beforeEach(function () {\n            actual = (new Date(1970, 0)).toString();\n        });\n\n        it('should show correct date info for ' + actual, function () {\n            expect(actual).toMatch(/1970/);\n            expect(actual).toMatch(/jan/i);\n            expect(actual).toMatch(/thu/i);\n            expect(actual).toMatch(/00:00:00/);\n        });\n    });\n\n    describe('#valueOf()', function () {\n        // Note that new Date(1970, 0).valueOf() is 0 in UTC timezone.\n        // Check check that it's a number (and an int), not that it's \"truthy\".\n        var actual;\n\n        beforeEach(function () {\n            actual = (new Date(1970, 0)).valueOf();\n        });\n        it('should give a numeric value', function () {\n            expect(typeof actual).toBe('number');\n        });\n        it('should not be NaN', function () {\n            expect(isNaN(actual)).toBe(false);\n        });\n        it('should give an int value', function () {\n            expect(actual).toBe(Math.floor(actual));\n        });\n    });\n\n    describe('#getUTCDate()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getUTCDate()).toBe(item.days[index], date);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCDay()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getUTCDay()).toBe(item.getUTCDay[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCFullYear()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCFullYear()).toBe(-109252);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMonth()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item, index) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMonth()).toBe(index);\n                });\n            });\n        });\n\n        it('should return correct values', function () {\n            expect(new Date(8.64e15).getUTCMonth()).toBe(8);\n            expect(new Date(0).getUTCMonth()).toBe(0);\n        });\n    });\n\n    describe('#getUTCHours()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCHours()).toBe(11);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMinutes()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMinutes()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCSeconds()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCSeconds()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMilliseconds()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMilliseconds()).toBe(708);\n                });\n            });\n        });\n    });\n\n    describe('#getDate()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getDate()).toBe(item.days[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getDay()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getDay()).toBe(item.getDay[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getFullYear()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getFullYear()).toBe(-109252);\n                });\n            });\n        });\n    });\n\n    describe('#getMonth()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item, index) {\n                item.dates.forEach(function (date) {\n                    expect(date.getMonth()).toBe(index);\n                });\n            });\n        });\n    });\n\n    describe('#getHours()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getHours() + Math.floor(date.getTimezoneOffset() / 60)).toBe(11);\n                });\n            });\n        });\n    });\n\n    describe('#getMinutes()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    var off = date.getTimezoneOffset();\n                    var offHours = Math.floor(off / 60);\n                    var offMins = off - offHours * 60;\n                    expect(date.getMinutes() + offMins).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getSeconds()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getSeconds()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getMilliseconds()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getMilliseconds()).toBe(708);\n                });\n            });\n        });\n    });\n\n    describe('#toISOString()', function () {\n        // TODO: write the rest of the test.\n\n        it('should support extended years', function () {\n            expect(new Date(-62198755200000).toISOString().indexOf('-000001-01-01')).toBe(0);\n            expect(new Date(8.64e15).toISOString().indexOf('+275760-09-13')).toBe(0);\n        });\n\n        it('should return correct dates', function () {\n            expect(new Date(-1).toISOString()).toBe('1969-12-31T23:59:59.999Z'); // Safari 5.1.5 \"1969-12-31T23:59:59.-01Z\"\n            negativeDate.forEach(function (item, index) {\n                var m = index + 1;\n                item.dates.forEach(function (date, idx) {\n                    var d = item.days[idx];\n                    expect(date.toISOString()).toBe('-109252-' + (m < 10 ? '0' + m : m) + '-' + (d < 10 ? '0' + d : d) + 'T11:59:59.708Z'); // Opera 11.61/Opera 12 bug with Date#getUTCMonth\n                });\n            });\n        });\n\n    });\n\n    describe('#toUTCString()', function () {\n        it('should return correct dates', function () {\n            expect(new Date(-1509842289600292).toUTCString()).toBe('Mon, 01 Jan -45875 11:59:59 GMT');\n        });\n    });\n\n    describe('#toDateString()', function () {\n        it('should return correct dates', function () {\n            expect(new Date(-1509842289600292).toDateString()).toBe('Mon Jan 01 -45875');\n        });\n    });\n\n    describe('#toString()', function () {\n        it('should return correct dates', function () {\n            var actual = new Date(1449662400000).toString();\n            var re = /^Wed Dec 09 2015 \\d\\d:\\d\\d:\\d\\d GMT[-\\+]\\d\\d\\d\\d(?: |$)/;\n            expect(re.test(actual)).toBe(true, actual);\n        });\n    });\n\n    describe('#toJSON()', function () {\n\n        // Opera 11.6x/12 bug\n        it('should call toISOString', function () {\n            var date = new Date(0);\n            date.toISOString = function () {\n                return 1;\n            };\n            expect(date.toJSON()).toBe(1);\n        });\n\n        it('should return null for not finite dates', function () {\n            var date = new Date(NaN),\n                json;\n            try {\n                json = date.toJSON();\n            } catch (e) {\n                /* invalid json */\n                expect(e).not.toEqual(jasmine.any(Error));\n            }\n            expect(json).toBe(null);\n        });\n\n        it('should return the isoString when stringified', function () {\n            var date = new Date();\n            expect(JSON.stringify(date.toISOString())).toBe(JSON.stringify(date));\n        });\n    });\n\n});\n"]}